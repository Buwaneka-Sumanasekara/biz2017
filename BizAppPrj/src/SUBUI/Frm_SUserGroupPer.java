/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SUBUI;

import CONTROLLERS.C_UserGroup;
import DB_ACCESS.DB;
import MAIN.Frm_Main;
import MODELS.MPermissions;
import MODELS.MUsergroup;
import UI.Frm_Table;
import VALIDATIONS.MyValidator;
import WINMNG.MyWindowBasicControllers;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Map;
import java.util.TreeMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreePath;
import jdk.nashorn.internal.objects.Global;

/**
 *
 * @author HOME
 */
public class Frm_SUserGroupPer extends javax.swing.JInternalFrame implements MyWindowBasicControllers {

    Frm_Table ft = null;

    Frm_Main mainW = null;
    MyValidator fv = null;
    C_UserGroup cug = null;

    public Frm_SUserGroupPer(Frm_Main mainw, String ScreenName) {
        initComponents();
        this.setTitle(ScreenName);
        this.lblScreenName.setText(ScreenName);
        this.mainW = mainw;
        this.fv = new MyValidator();
        this.cug = new C_UserGroup();
        Refresh();
        setShortCutKeys(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblScreenName = new javax.swing.JLabel();
        jpanelq = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmb_Usergrp_Cur = new javax.swing.JComboBox<>();
        cmb_Usergrp = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        butNewUsergrp = new javax.swing.JButton();
        butEditUsergrp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree_sel_usergrp = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        tree_cur_usergrp = new javax.swing.JTree();
        butAddPer = new javax.swing.JButton();

        setClosable(true);
        setTitle("caption");
        setName(""); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(226, 226, 226));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblScreenName.setBackground(new java.awt.Color(153, 255, 51));
        lblScreenName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblScreenName.setText("caption");
        jPanel2.add(lblScreenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 180, 40));
        jPanel2.add(jpanelq, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 270, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 40));

        jLabel4.setText("Your User Group");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 160, 30));

        jPanel1.add(cmb_Usergrp_Cur, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 150, 30));

        jPanel1.add(cmb_Usergrp, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 60, 150, 30));

        jLabel5.setText("User Group");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 70, 30));

        butNewUsergrp.setText("New +");
        butNewUsergrp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNewUsergrpActionPerformed(evt);
            }
        });
        jPanel1.add(butNewUsergrp, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, -1, 30));

        butEditUsergrp.setText("Edit");
        butEditUsergrp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEditUsergrpActionPerformed(evt);
            }
        });
        jPanel1.add(butEditUsergrp, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, 60, 30));

        jScrollPane1.setViewportView(tree_sel_usergrp);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 360, 490));

        jScrollPane2.setViewportView(tree_cur_usergrp);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 350, 490));

        butAddPer.setText(">>");
        butAddPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddPerActionPerformed(evt);
            }
        });
        jPanel1.add(butAddPer, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, 80, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 620));

        setBounds(0, 0, 867, 646);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

    }//GEN-LAST:event_formInternalFrameOpened

    private void butEditUsergrpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEditUsergrpActionPerformed
        MUsergroup ug = (MUsergroup) cmb_Usergrp.getSelectedItem();
        if (ug != null) {
            Frm_Sub_UserGrp frm_ug = new Frm_Sub_UserGrp(mainW, true, ug);
            frm_ug.setVisible(true);
            Refresh();
        }


    }//GEN-LAST:event_butEditUsergrpActionPerformed

    private void butNewUsergrpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNewUsergrpActionPerformed

        Frm_Sub_UserGrp frm_ug = new Frm_Sub_UserGrp(mainW, true, null);
        frm_ug.setVisible(true);
        Refresh();


    }//GEN-LAST:event_butNewUsergrpActionPerformed

    private void butAddPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddPerActionPerformed

        addPermissions();

    }//GEN-LAST:event_butAddPerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAddPer;
    private javax.swing.JButton butEditUsergrp;
    private javax.swing.JButton butNewUsergrp;
    private javax.swing.JComboBox<String> cmb_Usergrp;
    private javax.swing.JComboBox<String> cmb_Usergrp_Cur;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpanelq;
    private javax.swing.JLabel lblScreenName;
    private javax.swing.JTree tree_cur_usergrp;
    private javax.swing.JTree tree_sel_usergrp;
    // End of variables declaration//GEN-END:variables

    @Override
    public void SaveProcess() {

    }

    @Override
    public void EditMode() {

    }

    @Override
    public void Refresh() {

        try {
            cmb_Usergrp.setModel(new DefaultComboBoxModel(cug.getUserGroups(true, true)));

            cmb_Usergrp_Cur.setModel(new DefaultComboBoxModel(cug.getUserGroups(false, false)));
            cmb_Usergrp_Cur.setEnabled(false);
            cmb_Usergrp_Cur.setSelectedItem(GLOBALDATA.GlobalData.CurUser.getMUsergroup());

            tree_cur_usergrp.setModel(null);

            tree_sel_usergrp.setModel(null);

            MUsergroup ugc = (MUsergroup) cmb_Usergrp_Cur.getSelectedItem();
            MUsergroup ug = (MUsergroup) cmb_Usergrp.getSelectedItem();
            createUserMenu(ugc.getId(), tree_cur_usergrp);
            if (ug != null) {
                createUserMenu(ug.getId(), tree_sel_usergrp);
            }

        } catch (Exception ex) {
            Logger.getLogger(Frm_SUserGroupPer.class.getName()).log(Level.SEVERE, null, ex.getMessage());
        }
    }

    public void setShortCutKeys(JInternalFrame f) {

        String exit = "exit";
        InputMap inputMap0 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), exit);
        ActionMap actionMap0 = f.getRootPane().getActionMap();
        actionMap0.put(exit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                exit();
            }

        }
        );

        String Search = "Search";
        InputMap inputMap1 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), Search);
        ActionMap actionMap1 = f.getRootPane().getActionMap();
        actionMap1.put(Search, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SearchMode();
            }

        }
        );

        String Save = "Save";
        InputMap inputMap2 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), Save);
        ActionMap actionMap2 = f.getRootPane().getActionMap();
        actionMap2.put(Save, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SaveProcess();
            }

        }
        );

        String Edit = "Edit";
        InputMap inputMap3 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap3.put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), Edit);
        ActionMap actionMap3 = f.getRootPane().getActionMap();
        actionMap3.put(Edit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                EditMode();
            }

        }
        );

        String Refresh = "Refresh";
        InputMap inputMap4 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap4.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), Refresh);
        ActionMap actionMap4 = f.getRootPane().getActionMap();
        actionMap4.put(Refresh, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Refresh();
            }

        }
        );

    }

    private void exit() {

        try {
            this.setClosed(true);
            mainW.CurrentFrame = "";

        } catch (PropertyVetoException ex) {
            Logger.getLogger(Frm_SUserGroupPer.class.getName()).log(Level.SEVERE, null, ex.getMessage());
        }

    }

    @Override
    public void setDisableEnableComponents(JComponent[] EnComlist, JComponent[] DisComlist) {
        for (JComponent c : DisComlist) {
            c.setEnabled(false);
        }
        for (JComponent c : EnComlist) {
            c.setEnabled(true);
        }

    }

    @Override
    public void SearchMode() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void createUserMenu(int ugid, JTree tree) {
        Map<String, DefaultMutableTreeNode> NodesMap = new TreeMap<String, DefaultMutableTreeNode>();
        try {
            ArrayList<MPermissions> menus = cug.getUserGroupPermitions(ugid, 0);
            //create the root node
            DefaultMutableTreeNode root = new DefaultMutableTreeNode("");

            tree.setCellRenderer(new DefaultTreeCellRenderer() {
                private Icon loadIcon = UIManager.getIcon("OptionPane.errorIcon");
                // private Icon homeIcon = new ImageIcon(getClass().getResource("/SYSIMG/TreeIcons/home.png"));
                private Icon saveIcon = UIManager.getIcon("OptionPane.informationIcon");

                //private Icon loadIcon = new ImageIcon(getClass().getResource("/SYSIMG/iconappimg.png"));
                //private Icon saveIcon = new ImageIcon(getClass().getResource("/SYSIMG/iconappimg.png"));
                @Override
                public Component getTreeCellRendererComponent(JTree tree,
                        Object value, boolean selected, boolean expanded,
                        boolean isLeaf, int row, boolean focused) {
                    Component c = super.getTreeCellRendererComponent(tree, value,
                            selected, expanded, isLeaf, row, focused);

                    if (selected) {
                        if (value.toString().equals("Home")) {
                            //   setIcon(homeIcon);
                        }
                    } else if (value.toString().equals("Home")) {
                        //  setIcon(homeIcon);
                    }

                    return c;

                }
            });

            for (MPermissions p : menus) {
                //System.out.println(p.getId() + "-" + p.getParentid());

                if (p.getId().equals(p.getParentid())) {
                    if (NodesMap.get(p.getId()) == null) {
                        DefaultMutableTreeNode parent = new DefaultMutableTreeNode(p);
                        NodesMap.put(p.getId(), parent);
                        root.add(parent);

                    }
                } else {
                    DefaultMutableTreeNode parent = NodesMap.get(p.getParentid());
                    if (parent != null) {
                        DefaultMutableTreeNode node = new DefaultMutableTreeNode(p);
                        NodesMap.put(p.getId(), node);
                        parent.add(node);
                    }
                }
            }
            tree.setModel(new DefaultTreeModel(root));

        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

    }

    private void addPermissions() {
        try {
            TreePath selectionPath = tree_cur_usergrp.getSelectionPath();
            System.out.println(selectionPath.getLastPathComponent());

            MUsergroup ug = (MUsergroup) cmb_Usergrp.getSelectedItem();
            DefaultMutableTreeNode mtn = (DefaultMutableTreeNode) selectionPath.getLastPathComponent();
            MPermissions p = (MPermissions) mtn.getUserObject();
            if (ug != null) {
                cug.AddPermissionToGroup(ug.getId(), p);
                createUserMenu(ug.getId(), tree_sel_usergrp);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }

    }

}
