/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SUBUI;

import CONTROLLERS.C_Units;
import DB_ACCESS.DB;
import MAIN.Frm_Main;
import MODELS.MUnits;
import UI.Frm_Table;
import VALIDATIONS.MyValidator;
import WINMNG.MyWindowBasicControllers;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author HOME
 */
public class Frm_MUnits extends javax.swing.JInternalFrame implements MyWindowBasicControllers {

    Frm_Table ft = null;

    Frm_Main mainW = null;
    MyValidator fv = null;
    C_Units controller = null;

    public Frm_MUnits(Frm_Main mainw, String ScreenName) {
        initComponents();
        this.setTitle(ScreenName);
        this.lblScreenName.setText(ScreenName);
        this.controller = new C_Units();
        this.mainW = mainw;
        this.fv = new MyValidator();
        Refresh();
        setShortCutKeys(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layout_Unit = new javax.swing.JPanel();
        txt_UnitCode = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        but_UnitUpdate = new javax.swing.JButton();
        but_UnitSave = new javax.swing.JButton();
        but_UnitSearch = new javax.swing.JButton();
        but_UnitRefresh = new javax.swing.JButton();
        lblScreenName = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txt_UnitDescription = new javax.swing.JTextField();
        Chk_Active = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txt_UnitSymble = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Units");
        setName(""); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        layout_Unit.setBackground(new java.awt.Color(255, 255, 255));
        layout_Unit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_UnitCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_UnitCodeActionPerformed(evt);
            }
        });
        txt_UnitCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_UnitCodeKeyTyped(evt);
            }
        });
        layout_Unit.add(txt_UnitCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 150, 30));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        but_UnitUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit.png"))); // NOI18N
        but_UnitUpdate.setToolTipText("Save");
        but_UnitUpdate.setContentAreaFilled(false);
        but_UnitUpdate.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit_disable.png"))); // NOI18N
        but_UnitUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_UnitUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(but_UnitUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 40, 40));

        but_UnitSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save.png"))); // NOI18N
        but_UnitSave.setToolTipText("Save");
        but_UnitSave.setContentAreaFilled(false);
        but_UnitSave.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save_disable.png"))); // NOI18N
        but_UnitSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_UnitSaveActionPerformed(evt);
            }
        });
        jPanel2.add(but_UnitSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        but_UnitSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search.png"))); // NOI18N
        but_UnitSearch.setToolTipText("Search(F2)");
        but_UnitSearch.setContentAreaFilled(false);
        but_UnitSearch.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search_disable.png"))); // NOI18N
        but_UnitSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_UnitSearchActionPerformed(evt);
            }
        });
        jPanel2.add(but_UnitSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 40, 40));

        but_UnitRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh.png"))); // NOI18N
        but_UnitRefresh.setToolTipText("Refresh");
        but_UnitRefresh.setContentAreaFilled(false);
        but_UnitRefresh.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh_disable.png"))); // NOI18N
        but_UnitRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_UnitRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(but_UnitRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 40, 40));

        lblScreenName.setBackground(new java.awt.Color(153, 255, 51));
        lblScreenName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblScreenName.setText("Name");
        jPanel2.add(lblScreenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 180, 40));
        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 270, 40));

        layout_Unit.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 40));
        layout_Unit.add(txt_UnitDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 260, 30));

        Chk_Active.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Chk_ActiveMouseClicked(evt);
            }
        });
        layout_Unit.add(Chk_Active, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 180, -1));

        jLabel2.setText("Code");
        layout_Unit.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 110, 30));

        jLabel4.setText("Symble");
        layout_Unit.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 110, 30));

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setForeground(new java.awt.Color(153, 51, 0));
        jLabel5.setText("System will provide Auto Number for Code. So you need not to enter Code while creating  new Records");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 770, 40));

        layout_Unit.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 860, 40));

        txt_UnitSymble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_UnitSymbleActionPerformed(evt);
            }
        });
        txt_UnitSymble.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_UnitSymbleKeyTyped(evt);
            }
        });
        layout_Unit.add(txt_UnitSymble, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 150, 30));

        jLabel6.setText("Description *");
        layout_Unit.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 110, 30));

        getContentPane().add(layout_Unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 868, 640));

        setBounds(0, 0, 867, 668);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

    }//GEN-LAST:event_formInternalFrameOpened

    private void txt_UnitSymbleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_UnitSymbleKeyTyped
        fv.LimitForChars(txt_UnitCode,3, evt);
    }//GEN-LAST:event_txt_UnitSymbleKeyTyped

    private void txt_UnitSymbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_UnitSymbleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_UnitSymbleActionPerformed

    private void Chk_ActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chk_ActiveMouseClicked
        if (Chk_Active.isSelected()) {
            Chk_Active.setText("Active");
        } else {
            Chk_Active.setText("In-Active");
        }
    }//GEN-LAST:event_Chk_ActiveMouseClicked

    private void but_UnitRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_UnitRefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_but_UnitRefreshActionPerformed

    private void but_UnitSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_UnitSearchActionPerformed
        SearchMode();
    }//GEN-LAST:event_but_UnitSearchActionPerformed

    private void but_UnitSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_UnitSaveActionPerformed
        SaveProcess();
    }//GEN-LAST:event_but_UnitSaveActionPerformed

    private void but_UnitUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_UnitUpdateActionPerformed
        EditMode();
    }//GEN-LAST:event_but_UnitUpdateActionPerformed

    private void txt_UnitCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_UnitCodeKeyTyped
        fv.NumbersOnly(txt_UnitCode, evt);
    }//GEN-LAST:event_txt_UnitCodeKeyTyped

    private void txt_UnitCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_UnitCodeActionPerformed
        try {
            if (txt_UnitCode.getText().equals("")) {
                txt_UnitDescription.grabFocus();
            } else {
                MUnits old = controller.getUnit(fv.replacer(txt_UnitCode.getText()));
                if(old==null){
                    JOptionPane.showMessageDialog(rootPane, "Couldnt find Specific Unit for ID="+txt_UnitCode.getText(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
                }else{
                    txt_UnitDescription.setText(old.getName());
                    Chk_Active.setSelected((boolean) (old.getActive() == 1 ? true : false));
                    txt_UnitSymble.setText(old.getSymble());
                    JComponent[] EnComlist = {but_UnitUpdate, but_UnitRefresh};
                    JComponent[] DisComlist = {but_UnitSearch, but_UnitSave, txt_UnitCode, txt_UnitDescription,txt_UnitSymble,Chk_Active};
                    setDisableEnableComponents(EnComlist, DisComlist);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txt_UnitCodeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Chk_Active;
    private javax.swing.JButton but_UnitRefresh;
    private javax.swing.JButton but_UnitSave;
    private javax.swing.JButton but_UnitSearch;
    private javax.swing.JButton but_UnitUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel layout_Unit;
    private javax.swing.JLabel lblScreenName;
    private javax.swing.JTextField txt_UnitCode;
    private javax.swing.JTextField txt_UnitDescription;
    private javax.swing.JTextField txt_UnitSymble;
    // End of variables declaration//GEN-END:variables

    @Override
    public void SaveProcess() {
        try {

            if (doValidation()) {
               
            
                if (txt_UnitCode.getText().equals("")) {
                    //new unit
                    int state = JOptionPane.showConfirmDialog(rootPane, "Do you want to Save this?", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (state == JOptionPane.YES_OPTION) {
                        MUnits m = new MUnits();
                        m.setId("");
                        m.setActive((byte) 1);
                        m.setName(fv.replacer(txt_UnitDescription.getText()));
                        m.setSymble(txt_UnitSymble.getText());
                        int saveUnit = controller.saveUnit(m);
                        if (saveUnit == 1) {
                            Refresh();
                            JOptionPane.showMessageDialog(rootPane, "Save Sucessfull!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);

                        } else {

                            JOptionPane.showMessageDialog(rootPane, "Faild to Save!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);

                        }
                    }
                } else {
                    int state = JOptionPane.showConfirmDialog(rootPane, "Do you want to Update this?", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (state == JOptionPane.YES_OPTION) {
                        MUnits oldm = controller.getUnit(fv.replacer(txt_UnitCode.getText()));
                        if (oldm != null) {

                            oldm.setActive((byte) (Chk_Active.isSelected() ? 1 : 0));
                            oldm.setName(fv.replacer(txt_UnitDescription.getText()));
                            oldm.setSymble(txt_UnitSymble.getText());
                            int updateUnit = controller.updateUnit(oldm);
                            if (updateUnit == 1) {
                                Refresh();
                                JOptionPane.showMessageDialog(rootPane, "Update Sucessfull!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Faild to Update!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);

                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Couldnt find specific Unit Id=" + txt_UnitCode.getText(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);

                        }

                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }

    }

    @Override
    public void EditMode() {
        JComponent[] EnComlist = {but_UnitSave, but_UnitRefresh, txt_UnitDescription, Chk_Active,txt_UnitSymble,Chk_Active};
        JComponent[] DisComlist = {but_UnitUpdate, but_UnitSearch,txt_UnitCode};
        setDisableEnableComponents(EnComlist, DisComlist);
    }

    @Override
    public void Refresh() {
        txt_UnitCode.setText("");
        txt_UnitDescription.setText("");
        txt_UnitCode.grabFocus();
txt_UnitSymble.setText("");
         Chk_Active.setText("Active");
        Chk_Active.setSelected(true);
        
        JComponent[] EnComlist = {but_UnitSave, but_UnitSearch, but_UnitRefresh, txt_UnitCode, txt_UnitDescription, Chk_Active};
        JComponent[] DisComlist = {but_UnitUpdate};
        setDisableEnableComponents(EnComlist, DisComlist);
    }

    public void setShortCutKeys(JInternalFrame f) {

         String exit = "exit";
        InputMap inputMap0 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), exit);
        ActionMap actionMap0 = f.getRootPane().getActionMap();
        actionMap0.put(exit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                exit();
            }

        }
        );

        String Search = "Search";
        InputMap inputMap1 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), Search);
        ActionMap actionMap1 = f.getRootPane().getActionMap();
        actionMap1.put(Search, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SearchMode();
            }

        }
        );
        
          String Save = "Save";
        InputMap inputMap2 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), Save);
        ActionMap actionMap2 = f.getRootPane().getActionMap();
        actionMap2.put(Save, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SaveProcess();
            }

        }
        );
        
           String Edit = "Edit";
        InputMap inputMap3 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap3.put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), Edit);
        ActionMap actionMap3 = f.getRootPane().getActionMap();
        actionMap3.put(Edit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                EditMode();
            }

        }
        );
        
          String Refresh = "Refresh";
        InputMap inputMap4 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap4.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), Refresh);
        ActionMap actionMap4 = f.getRootPane().getActionMap();
        actionMap4.put(Refresh, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Refresh();
            }

        }
        );


    }

    private void exit() {

        try {
            this.setClosed(true);
            mainW.CurrentFrame = "";

        } catch (PropertyVetoException ex) {
            Logger.getLogger(Frm_MUnits.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void setDisableEnableComponents(JComponent[] EnComlist, JComponent[] DisComlist) {
        for (JComponent c : DisComlist) {
            c.setEnabled(false);
        }
        for (JComponent c : EnComlist) {
            c.setEnabled(true);
        }

    }

    @Override
    public void SearchMode() {
        Vector<String> col = new Vector<>();
        col.add("Code");
        col.add("Des");

        String[] SQL_Col = {"ID", "NAME"};
        String SQL = "select ID,NAME from m_units";

        Connection currentCon = null;
        try {
            currentCon = DB.getCurrentCon();
        } catch (Exception ex) {
            Logger.getLogger(Frm_MUnits.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ft == null) {

            ft = new Frm_Table(txt_UnitCode, currentCon, col, SQL_Col, SQL, "");
            ft.setVisible(true);

        } else {
            ft = null;
            ft = new Frm_Table(txt_UnitCode, currentCon, col, SQL_Col, SQL, "");
            ft.setFocusable(true);
            ft.setVisible(true);
        }
    }

    private boolean doValidation() throws Exception{
       boolean state=true;
       
       if(txt_UnitDescription.getText().length()==0){
           state=false;
           throw new Exception("Unit description need");
       }
       return state;
    
    
    }

}
