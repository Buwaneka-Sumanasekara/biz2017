/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SUBUI;

import COMMONFUN.CommonFun;
import CONTROLLERS.C_GroupCommon;
import CONTROLLERS.C_Locations;
import CONTROLLERS.C_Products;
import CONTROLLERS.C_Propertise;
import CONTROLLERS.C_Suppliers;
import CONTROLLERS.C_Units;
import DB_ACCESS.DB;
import GLOBALDATA.GlobalData;
import MAIN.Frm_Main;
import MODELS.MGroupCommon;
import MODELS.MProductPropertise;
import MODELS.MProducts;
import MODELS.MPropertise;
import MODELS.MStocks;
import MODELS.MSupplier;
import MODELS.MUnitGroup;
import static SUBUI.Frm_SUserCreation.getExtension;
import UI.Frm_Table;
import VALIDATIONS.MyValidator;
import WINMNG.MyWindowBasicControllers;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author HOME
 */
public class Frm_MItems extends javax.swing.JInternalFrame implements MyWindowBasicControllers {

    C_GroupCommon CGroup = null;
    C_Units CUnit = null;
    C_Propertise CPropertise = null;
    C_Products CProducts = null;
    C_Suppliers CSuppliers = null;
    C_Locations CLoc = null;
    CommonFun cf = null;

    Frm_Table ft = null;

    Frm_Main mainW = null;
    MyValidator fv = null;

    public Frm_MItems(Frm_Main mainw, String ScreenName) {
        initComponents();

        this.setTitle(ScreenName);
        this.lblScreenName.setText(ScreenName);
        this.mainW = mainw;
        this.fv = new MyValidator();
        this.CGroup = new C_GroupCommon();
        this.CUnit = new C_Units();
        this.cf = new CommonFun();
        this.CPropertise = new C_Propertise();
        this.CProducts = new C_Products();
        this.CSuppliers = new C_Suppliers();
        this.CLoc = new C_Locations();
        try {
            CreateLayOut();
        } catch (Exception ex) {
            Logger.getLogger(Frm_MItems.class.getName()).log(Level.SEVERE, null, ex);
        }
        Clear();
        Refresh();
        setShortCutKeys(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        img_chooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        but_Update = new javax.swing.JButton();
        but_Save = new javax.swing.JButton();
        but_Search = new javax.swing.JButton();
        but_Refresh = new javax.swing.JButton();
        lblScreenName = new javax.swing.JLabel();
        jpanelq = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ParentLayout = new javax.swing.JTabbedPane();
        layout_ProductInfo = new javax.swing.JPanel();
        layout_Basic = new javax.swing.JPanel();
        Chk_ProActive = new javax.swing.JCheckBox();
        txtProShortName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtProName = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtProCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        butCreateShortName = new javax.swing.JButton();
        chk_BatchCreate = new javax.swing.JCheckBox();
        layoutGroups = new javax.swing.JPanel();
        lblG1 = new javax.swing.JLabel();
        lblG2 = new javax.swing.JLabel();
        lblG3 = new javax.swing.JLabel();
        lblG4 = new javax.swing.JLabel();
        lblG5 = new javax.swing.JLabel();
        cmbG4 = new javax.swing.JComboBox();
        cmbG1 = new javax.swing.JComboBox();
        cmbG2 = new javax.swing.JComboBox();
        cmbG3 = new javax.swing.JComboBox();
        cmbG5 = new javax.swing.JComboBox();
        layoutPrice = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtprosellprice = new javax.swing.JTextField();
        txtprocost = new javax.swing.JTextField();
        txtpromarkup = new javax.swing.JTextField();
        layoutPropertise = new javax.swing.JPanel();
        cmbProp = new javax.swing.JComboBox();
        txtFproVal = new javax.swing.JFormattedTextField();
        lblFormat = new javax.swing.JLabel();
        butPropAdd = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProperty = new javax.swing.JTable();
        layoutUnits = new javax.swing.JPanel();
        cmbUnits = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUnits = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        layoutRef = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtRef1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtRef2 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtRef7 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtRef8 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        butSupAdd = new javax.swing.JButton();
        cmb_Suppliers = new javax.swing.JComboBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        List_Sup = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtSupName = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtSupContact = new javax.swing.JLabel();
        txtSupContactPer = new javax.swing.JLabel();
        txtSupMobile = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblBatches = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        txt_imgurl = new javax.swing.JLabel();
        lblProImg = new javax.swing.JLabel();
        but_ProImgChoose = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setClosable(true);
        setTitle("Caption");
        setName(""); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        but_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit.png"))); // NOI18N
        but_Update.setToolTipText("Save");
        but_Update.setContentAreaFilled(false);
        but_Update.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit_disable.png"))); // NOI18N
        but_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_UpdateActionPerformed(evt);
            }
        });
        jPanel2.add(but_Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 40, 40));

        but_Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save.png"))); // NOI18N
        but_Save.setToolTipText("Save");
        but_Save.setContentAreaFilled(false);
        but_Save.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save_disable.png"))); // NOI18N
        but_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_SaveActionPerformed(evt);
            }
        });
        jPanel2.add(but_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 40));

        but_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search.png"))); // NOI18N
        but_Search.setToolTipText("Search(F2)");
        but_Search.setContentAreaFilled(false);
        but_Search.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search_disable.png"))); // NOI18N
        but_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_SearchActionPerformed(evt);
            }
        });
        jPanel2.add(but_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 40, 40));

        but_Refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh.png"))); // NOI18N
        but_Refresh.setToolTipText("Refresh");
        but_Refresh.setContentAreaFilled(false);
        but_Refresh.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh_disable.png"))); // NOI18N
        but_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_RefreshActionPerformed(evt);
            }
        });
        jPanel2.add(but_Refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 40, 40));

        lblScreenName.setBackground(new java.awt.Color(153, 255, 51));
        lblScreenName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblScreenName.setText("caption");
        jPanel2.add(lblScreenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 180, 40));
        jPanel2.add(jpanelq, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 270, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 40));

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setForeground(new java.awt.Color(153, 51, 0));
        jLabel5.setText("System will provide Auto Number for Code. So you need not to enter Code while creating  new Records");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 810, 20));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 860, 20));

        ParentLayout.setBackground(new java.awt.Color(255, 255, 255));

        layout_ProductInfo.setBackground(new java.awt.Color(255, 255, 255));
        layout_ProductInfo.setPreferredSize(new java.awt.Dimension(840, 660));
        layout_ProductInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        layout_Basic.setBackground(new java.awt.Color(255, 255, 255));
        layout_Basic.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Basic Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N
        layout_Basic.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Chk_ProActive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Chk_ProActiveMouseClicked(evt);
            }
        });
        layout_Basic.add(Chk_ProActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 150, -1));

        txtProShortName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProShortNameKeyTyped(evt);
            }
        });
        layout_Basic.add(txtProShortName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 310, -1));

        jLabel3.setText("Short Name");
        layout_Basic.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 70, 20));

        txtProName.setColumns(20);
        txtProName.setRows(5);
        jScrollPane1.setViewportView(txtProName);

        layout_Basic.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 370, 40));

        jLabel4.setText("Name");
        layout_Basic.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 20));

        txtProCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProCodeActionPerformed(evt);
            }
        });
        txtProCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProCodeKeyTyped(evt);
            }
        });
        layout_Basic.add(txtProCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 150, -1));

        jLabel2.setText("Code");
        layout_Basic.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, 20));

        jLabel9.setText("Status");
        layout_Basic.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 70, 20));

        butCreateShortName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/1469908729_Clipboard_Paste.png"))); // NOI18N
        butCreateShortName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCreateShortNameActionPerformed(evt);
            }
        });
        layout_Basic.add(butCreateShortName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 40, 30));

        chk_BatchCreate.setText("Create Batches");
        chk_BatchCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_BatchCreateActionPerformed(evt);
            }
        });
        layout_Basic.add(chk_BatchCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 120, 20));

        layout_ProductInfo.add(layout_Basic, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 460, 160));

        layoutGroups.setBackground(new java.awt.Color(255, 255, 255));
        layoutGroups.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Groups", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        layoutGroups.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblG1.setText("Group1");
        layoutGroups.add(lblG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        lblG2.setText("Group2");
        layoutGroups.add(lblG2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, 30));

        lblG3.setText("Group3");
        layoutGroups.add(lblG3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 120, 30));

        lblG4.setText("Group4");
        layoutGroups.add(lblG4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 120, 30));

        lblG5.setText("Group5");
        layoutGroups.add(lblG5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 120, 30));

        cmbG4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbG4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbG4ActionPerformed(evt);
            }
        });
        layoutGroups.add(cmbG4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 190, 30));

        cmbG1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbG1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbG1ActionPerformed(evt);
            }
        });
        layoutGroups.add(cmbG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 190, 30));

        cmbG2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbG2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbG2ActionPerformed(evt);
            }
        });
        layoutGroups.add(cmbG2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 190, 30));

        cmbG3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbG3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbG3ActionPerformed(evt);
            }
        });
        layoutGroups.add(cmbG3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 190, 30));

        cmbG5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbG5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbG5ActionPerformed(evt);
            }
        });
        layoutGroups.add(cmbG5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 190, 30));

        layout_ProductInfo.add(layoutGroups, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 370, 210));

        layoutPrice.setBackground(new java.awt.Color(255, 255, 255));
        layoutPrice.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        layoutPrice.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Sell Price");
        layoutPrice.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel7.setText("Cost Price");
        layoutPrice.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel8.setText("Markup %");
        layoutPrice.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        txtprosellprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprosellpriceKeyTyped(evt);
            }
        });
        layoutPrice.add(txtprosellprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 120, 20));

        txtprocost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprocostKeyTyped(evt);
            }
        });
        layoutPrice.add(txtprocost, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 120, 20));

        txtpromarkup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpromarkupActionPerformed(evt);
            }
        });
        txtpromarkup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpromarkupKeyTyped(evt);
            }
        });
        layoutPrice.add(txtpromarkup, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 120, 20));

        layout_ProductInfo.add(layoutPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 210, 110));

        layoutPropertise.setBackground(new java.awt.Color(255, 255, 255));
        layoutPropertise.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Propertise", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        layoutPropertise.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPropActionPerformed(evt);
            }
        });
        layoutPropertise.add(cmbProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 150, 20));

        txtFproVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFproValActionPerformed(evt);
            }
        });
        layoutPropertise.add(txtFproVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 130, 20));

        lblFormat.setForeground(new java.awt.Color(255, 0, 0));
        lblFormat.setText("###########");
        layoutPropertise.add(lblFormat, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 120, -1));

        butPropAdd.setText("+");
        butPropAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPropAddActionPerformed(evt);
            }
        });
        layoutPropertise.add(butPropAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 50, 40));

        tblProperty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Property", "DataType", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProperty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPropertyKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tblProperty);
        if (tblProperty.getColumnModel().getColumnCount() > 0) {
            tblProperty.getColumnModel().getColumn(0).setResizable(false);
            tblProperty.getColumnModel().getColumn(1).setResizable(false);
            tblProperty.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblProperty.getColumnModel().getColumn(2).setResizable(false);
            tblProperty.getColumnModel().getColumn(2).setPreferredWidth(60);
        }

        layoutPropertise.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 350, 240));

        layout_ProductInfo.add(layoutPropertise, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 370, 320));

        layoutUnits.setBackground(new java.awt.Color(255, 255, 255));
        layoutUnits.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Units", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        layoutUnits.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUnitsActionPerformed(evt);
            }
        });
        layoutUnits.add(cmbUnits, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 160, -1));

        tblUnits.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit Name", "Volume", "Is Base"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUnits.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(tblUnits);
        if (tblUnits.getColumnModel().getColumnCount() > 0) {
            tblUnits.getColumnModel().getColumn(0).setResizable(false);
            tblUnits.getColumnModel().getColumn(1).setResizable(false);
            tblUnits.getColumnModel().getColumn(1).setPreferredWidth(40);
            tblUnits.getColumnModel().getColumn(2).setResizable(false);
        }

        layoutUnits.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 430, 190));

        jLabel1.setText("Unit Group");
        layoutUnits.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        layout_ProductInfo.add(layoutUnits, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 460, 260));

        layoutRef.setBackground(new java.awt.Color(255, 255, 255));
        layoutRef.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "References", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        layoutRef.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setText("Ref 2");
        layoutRef.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        layoutRef.add(txtRef1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 160, -1));

        jLabel18.setText("Ref 1");
        layoutRef.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
        layoutRef.add(txtRef2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 160, -1));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "References", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setText("Ref 2");
        jPanel10.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        jPanel10.add(txtRef7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 160, -1));

        jLabel20.setText("Ref 1");
        jPanel10.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
        jPanel10.add(txtRef8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 160, -1));

        layoutRef.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 250, 110));

        layout_ProductInfo.add(layoutRef, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 250, 110));

        ParentLayout.addTab("Info", layout_ProductInfo);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        butSupAdd.setText("Add");
        butSupAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSupAddActionPerformed(evt);
            }
        });
        jPanel5.add(butSupAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 60, 30));

        jPanel5.add(cmb_Suppliers, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 230, 30));

        List_Sup.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        List_Sup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                List_SupMouseClicked(evt);
            }
        });
        List_Sup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                List_SupKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(List_Sup);

        jPanel5.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 300, 420));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Supplier Information");
        jPanel5.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 260, 20));

        jLabel11.setText("Mobile");
        jPanel5.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 230, -1, -1));
        jPanel5.add(txtSupName, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, 190, 20));

        jLabel13.setText("Contact Person");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, -1, -1));

        jLabel14.setText("Contact ");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, -1, -1));

        jLabel15.setText("Name");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, -1, -1));
        jPanel5.add(txtSupContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 190, 190, 20));
        jPanel5.add(txtSupContactPer, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 190, 20));
        jPanel5.add(txtSupMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 190, 20));

        ParentLayout.addTab("Suppliers", jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblBatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Location", "Batch", "Cost", "Sell", "SIH", "Unit", "Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblBatches);
        if (tblBatches.getColumnModel().getColumnCount() > 0) {
            tblBatches.getColumnModel().getColumn(1).setResizable(false);
            tblBatches.getColumnModel().getColumn(2).setResizable(false);
            tblBatches.getColumnModel().getColumn(3).setResizable(false);
            tblBatches.getColumnModel().getColumn(4).setResizable(false);
            tblBatches.getColumnModel().getColumn(5).setResizable(false);
            tblBatches.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel3.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 720, 450));

        ParentLayout.addTab("Batches", jPanel3);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel7.add(txt_imgurl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 320, 20));

        lblProImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel7.add(lblProImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 230, 270));

        but_ProImgChoose.setText("Choose Image");
        but_ProImgChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_ProImgChooseActionPerformed(evt);
            }
        });
        jPanel7.add(but_ProImgChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, -1, -1));

        ParentLayout.addTab("Image", jPanel7);

        jPanel1.add(ParentLayout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 850, 600));
        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 868, 630));

        setBounds(0, 0, 877, 659);
    }// </editor-fold>//GEN-END:initComponents

    private void but_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_SearchActionPerformed
        SearchMode();
    }//GEN-LAST:event_but_SearchActionPerformed

    private void but_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_RefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_but_RefreshActionPerformed

    private void but_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_SaveActionPerformed
        SaveProcess();
    }//GEN-LAST:event_but_SaveActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

    }//GEN-LAST:event_formInternalFrameOpened

    private void but_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_UpdateActionPerformed
        EditMode();
    }//GEN-LAST:event_but_UpdateActionPerformed

    private void cmbUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUnitsActionPerformed
        loadUnitGroupData();
    }//GEN-LAST:event_cmbUnitsActionPerformed

    private void tblPropertyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPropertyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            RemoveProperty();
        }
    }//GEN-LAST:event_tblPropertyKeyPressed

    private void butPropAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPropAddActionPerformed
        addProperty();
    }//GEN-LAST:event_butPropAddActionPerformed

    private void txtFproValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFproValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFproValActionPerformed

    private void cmbG5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbG5ActionPerformed
        loadGroups(5);
        SetProductName();
    }//GEN-LAST:event_cmbG5ActionPerformed

    private void cmbG3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbG3ActionPerformed

        loadGroups(3);
        SetProductName();
    }//GEN-LAST:event_cmbG3ActionPerformed

    private void cmbG2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbG2ActionPerformed
        loadGroups(2);
        SetProductName();
    }//GEN-LAST:event_cmbG2ActionPerformed

    private void cmbG1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbG1ActionPerformed

        loadGroups(1);
        SetProductName();
    }//GEN-LAST:event_cmbG1ActionPerformed

    private void cmbG4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbG4ActionPerformed

        loadGroups(4);
        SetProductName();
    }//GEN-LAST:event_cmbG4ActionPerformed

    private void butCreateShortNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCreateShortNameActionPerformed
        if (txtProName.getText().length() > 42) {
            txtProShortName.setText(txtProName.getText().substring(42));
        } else {
            txtProShortName.setText(txtProName.getText());
        }
    }//GEN-LAST:event_butCreateShortNameActionPerformed

    private void txtProCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProCodeKeyTyped

    }//GEN-LAST:event_txtProCodeKeyTyped

    private void txtProCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProCodeActionPerformed
        loadProduct();
    }//GEN-LAST:event_txtProCodeActionPerformed

    private void txtProShortNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProShortNameKeyTyped
        fv.disableSpecialCharacters(txtProShortName, evt);
    }//GEN-LAST:event_txtProShortNameKeyTyped

    private void Chk_ProActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chk_ProActiveMouseClicked

    }//GEN-LAST:event_Chk_ProActiveMouseClicked

    private void txtpromarkupKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpromarkupKeyTyped
        fv.validateforFloatingPoints(txtpromarkup, evt, 2);
    }//GEN-LAST:event_txtpromarkupKeyTyped

    private void txtpromarkupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpromarkupActionPerformed
        changeSellPrice();
    }//GEN-LAST:event_txtpromarkupActionPerformed

    private void txtprocostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprocostKeyTyped
        fv.validateforFloatingPoints(txtprocost, evt, 2);
    }//GEN-LAST:event_txtprocostKeyTyped

    private void txtprosellpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprosellpriceKeyTyped
        fv.validateforFloatingPoints(txtprosellprice, evt, 2);
    }//GEN-LAST:event_txtprosellpriceKeyTyped

    private void butSupAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSupAddActionPerformed
        MSupplier sup = (MSupplier) cmb_Suppliers.getSelectedItem();

        ListModel dlm = List_Sup.getModel();
        Vector v = new Vector();
        for (int i = 0; i < dlm.getSize(); i++) {
            if (!sup.equals(dlm.getElementAt(i))) {
                v.add(dlm.getElementAt(i));
            }
        }
        v.add(sup);
        List_Sup.removeAll();
        List_Sup.setListData(v);


    }//GEN-LAST:event_butSupAddActionPerformed

    private void List_SupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_SupMouseClicked
        if (List_Sup.getSelectedIndex() >= 0) {

            MSupplier m = (MSupplier) List_Sup.getSelectedValue();
            txtSupName.setText(m.getName());
            txtSupContact.setText(m.getContact());
            txtSupMobile.setText(m.getMobile());
            txtSupContactPer.setText(m.getContactperson());
        }
    }//GEN-LAST:event_List_SupMouseClicked

    private void chk_BatchCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_BatchCreateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_BatchCreateActionPerformed

    private void cmbPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPropActionPerformed
        changePropTyp();
    }//GEN-LAST:event_cmbPropActionPerformed

    private void List_SupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_List_SupKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_DELETE) {
            if (List_Sup.getSelectedIndex() >= 0) {
                List_Sup.remove(List_Sup.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_List_SupKeyPressed

    private void but_ProImgChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_ProImgChooseActionPerformed
        int returnval = img_chooser.showOpenDialog(but_ProImgChoose);
        if (returnval == JFileChooser.APPROVE_OPTION) {
            File file = img_chooser.getSelectedFile();
            setLableImage(file);

        }

    }//GEN-LAST:event_but_ProImgChooseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Chk_ProActive;
    private javax.swing.JList List_Sup;
    private javax.swing.JTabbedPane ParentLayout;
    private javax.swing.JButton butCreateShortName;
    private javax.swing.JButton butPropAdd;
    private javax.swing.JButton butSupAdd;
    private javax.swing.JButton but_ProImgChoose;
    private javax.swing.JButton but_Refresh;
    private javax.swing.JButton but_Save;
    private javax.swing.JButton but_Search;
    private javax.swing.JButton but_Update;
    private javax.swing.JCheckBox chk_BatchCreate;
    private javax.swing.JComboBox cmbG1;
    private javax.swing.JComboBox cmbG2;
    private javax.swing.JComboBox cmbG3;
    private javax.swing.JComboBox cmbG4;
    private javax.swing.JComboBox cmbG5;
    private javax.swing.JComboBox cmbProp;
    private javax.swing.JComboBox cmbUnits;
    private javax.swing.JComboBox cmb_Suppliers;
    private javax.swing.JFileChooser img_chooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel jpanelq;
    private javax.swing.JPanel layoutGroups;
    private javax.swing.JPanel layoutPrice;
    private javax.swing.JPanel layoutPropertise;
    private javax.swing.JPanel layoutRef;
    private javax.swing.JPanel layoutUnits;
    private javax.swing.JPanel layout_Basic;
    private javax.swing.JPanel layout_ProductInfo;
    private javax.swing.JLabel lblFormat;
    private javax.swing.JLabel lblG1;
    private javax.swing.JLabel lblG2;
    private javax.swing.JLabel lblG3;
    private javax.swing.JLabel lblG4;
    private javax.swing.JLabel lblG5;
    private javax.swing.JLabel lblProImg;
    private javax.swing.JLabel lblScreenName;
    private javax.swing.JTable tblBatches;
    private javax.swing.JTable tblProperty;
    private javax.swing.JTable tblUnits;
    private javax.swing.JFormattedTextField txtFproVal;
    private javax.swing.JTextField txtProCode;
    private javax.swing.JTextArea txtProName;
    private javax.swing.JTextField txtProShortName;
    private javax.swing.JTextField txtRef1;
    private javax.swing.JTextField txtRef2;
    private javax.swing.JTextField txtRef7;
    private javax.swing.JTextField txtRef8;
    private javax.swing.JLabel txtSupContact;
    private javax.swing.JLabel txtSupContactPer;
    private javax.swing.JLabel txtSupMobile;
    private javax.swing.JLabel txtSupName;
    private javax.swing.JLabel txt_imgurl;
    private javax.swing.JTextField txtprocost;
    private javax.swing.JTextField txtpromarkup;
    private javax.swing.JTextField txtprosellprice;
    // End of variables declaration//GEN-END:variables

    @Override
    public void SaveProcess() {
        if (but_Save.isEnabled()) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(rootPane, "Do you want to add/Update Product?", GlobalData.MESSAGEBOX, JOptionPane.YES_NO_OPTION);
            if (showConfirmDialog == JOptionPane.YES_OPTION) {
                if (validateProduct()) {

                    MProducts p = new MProducts();

                    p.setId(txtProCode.getText());
                    p.setName(txtProName.getText());
                    p.setPrintdes(txtProShortName.getText());
                    p.setActive((byte) (Chk_ProActive.isSelected() ? 1 : 0));
                    p.setMGroup1(((MGroupCommon) cmbG1.getSelectedItem()).getId());
                    p.setMGroup2(((MGroupCommon) cmbG2.getSelectedItem()).getId());
                    p.setMGroup3(((MGroupCommon) cmbG3.getSelectedItem()).getId());
                    p.setMGroup4(((MGroupCommon) cmbG4.getSelectedItem()).getId());
                    p.setMGroup5(((MGroupCommon) cmbG5.getSelectedItem()).getId());
                    p.setBatch((byte) (chk_BatchCreate.isSelected() ? 1 : 0));
                    p.setCprice(Double.parseDouble(txtprocost.getText()));
                    p.setMarkup((txtpromarkup.getText().equals("") ? 0 : Double.parseDouble(txtpromarkup.getText())));
                    p.setSprice(Double.parseDouble(txtprosellprice.getText()));
                    p.setRef1(txtRef1.getText());
                    p.setRef2(txtRef2.getText());
                    p.setMUserByCruser(GlobalData.CurUser.getId());
                    p.setMUserByMduser(GlobalData.CurUser.getId());

                    if (txt_imgurl.getText().length() > 0) {

                        p.setProImg(txt_imgurl.getText());
                    } else {
                        p.setProImg("");
                    }

                    MUnitGroup ug = (MUnitGroup) cmbUnits.getSelectedItem();
                    if (ug != null) {
                        p.setUnitGroupId(ug.getUnitGroupId());
                    }
                    Vector<MProductPropertise> VProProp = new Vector<>();
                    DefaultTableModel tblProp = (DefaultTableModel) tblProperty.getModel();
                    for (int i = 0; i < tblProp.getRowCount(); i++) {
                        MPropertise prop = (MPropertise) tblProp.getValueAt(i, 0);
                        String propval = tblProp.getValueAt(i, 2).toString();
                        VProProp.add(new MProductPropertise(txtProCode.getText(), prop.getPropId().toString(), propval));
                    }

                    ListModel dlm = List_Sup.getModel();
                    Vector vSup = new Vector();
                    for (int i = 0; i < dlm.getSize(); i++) {

                        vSup.add(dlm.getElementAt(i));

                    }
                    try {
                        String saveProduct = CProducts.addProduct(p, VProProp, vSup);
                        JOptionPane.showMessageDialog(rootPane, saveProduct, GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);
                        Clear();
                        CreateLayOut();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(rootPane, "Process cannot complete due to :" + ex.getMessage(), GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }

    private void setLableImage(File file) {
        if (file.exists()) {
            System.out.println(file.getAbsolutePath());
            txt_imgurl.setText(file.getAbsolutePath());
            BufferedImage img = null;
            try {
                img = ImageIO.read(file);
            } catch (IOException e) {
                e.printStackTrace();
            }
            Image dimg = img.getScaledInstance(lblProImg.getWidth(), lblProImg.getHeight(),
                    Image.SCALE_SMOOTH);

            lblProImg.setIcon(new ImageIcon(dimg));
        } else {
            lblProImg.setIcon(null); // NOI18N
        }

    }

    @Override
    public void EditMode() {
        if (but_Update.isEnabled()) {
            JComponent enablecom[] = {but_Refresh, but_Save, layout_Basic, layoutGroups, but_ProImgChoose, txtProName, layoutPrice, layoutRef, layoutUnits, layoutPropertise};
            JComponent disablecom[] = {but_Search, but_Update, txtProCode};
            setDisableEnableComponents(enablecom, disablecom);
        }
    }

    @Override
    public void Refresh() {
        try {
            if (but_Refresh.isEnabled()) {
                Clear();
                CreateLayOut();
            }
        } catch (Exception ex) {
            //Logger.getLogger(Frm_MItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setShortCutKeys(JInternalFrame f) {

        String exit = "exit";
        InputMap inputMap0 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), exit);
        ActionMap actionMap0 = f.getRootPane().getActionMap();
        actionMap0.put(exit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                exit();
            }

        }
        );

        String Search = "Search";
        InputMap inputMap1 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), Search);
        ActionMap actionMap1 = f.getRootPane().getActionMap();
        actionMap1.put(Search, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SearchMode();
            }

        }
        );

        String Save = "Save";
        InputMap inputMap2 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), Save);
        ActionMap actionMap2 = f.getRootPane().getActionMap();
        actionMap2.put(Save, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SaveProcess();
            }

        }
        );

        String Edit = "Edit";
        InputMap inputMap3 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap3.put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), Edit);
        ActionMap actionMap3 = f.getRootPane().getActionMap();
        actionMap3.put(Edit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                EditMode();
            }

        }
        );

        String Refresh = "Refresh";
        InputMap inputMap4 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap4.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), Refresh);
        ActionMap actionMap4 = f.getRootPane().getActionMap();
        actionMap4.put(Refresh, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Refresh();
            }

        }
        );

    }

    private void exit() {

        try {
            this.setClosed(true);
            mainW.CurrentFrame = "";

        } catch (PropertyVetoException ex) {
            Logger.getLogger(Frm_MItems.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void setDisableEnableComponents(JComponent[] EnComlist, JComponent[] DisComlist) {
        for (JComponent c : DisComlist) {
            if (c instanceof JPanel) {
                Component[] components = c.getComponents();
                for (Component component : components) {
                    component.setEnabled(false);
                }
            } else {
                c.setEnabled(false);
            }
        }
        for (JComponent c : EnComlist) {
            if (c instanceof JPanel) {
                Component[] components = c.getComponents();
                for (Component component : components) {
                    component.setEnabled(true);
                }
            } else {
                c.setEnabled(true);
            }
        }

    }

    @Override
    public void SearchMode() {
        if (but_Search.isEnabled()) {
            Vector<String> col = new Vector<>();
            col.add("Code");
            col.add("Des");

            String[] SQL_Col = {"ID", "NAME"};
            String SQL = "select ID,NAME from M_PRODUCTS ";
            String SQLWhere = "";
            Connection currentCon = null;
            try {
                currentCon = DB.getCurrentCon();
            } catch (Exception ex) {
                Logger.getLogger(Frm_MItems.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (ft == null) {

                ft = new Frm_Table(txtProCode, currentCon, col, SQL_Col, SQL, SQLWhere);
                ft.setVisible(true);

            } else {
                ft = null;
                ft = new Frm_Table(txtProCode, currentCon, col, SQL_Col, SQL, SQLWhere);
                ft.setFocusable(true);
                ft.setVisible(true);
            }
        }
    }

    private void CreateLayOut() throws Exception {

        Map<Integer, String> GroupNames = CGroup.getGroupDisplayNames();
        lblG1.setText(GroupNames.get(1));
        lblG2.setText(GroupNames.get(2));
        lblG3.setText(GroupNames.get(3));
        lblG4.setText(GroupNames.get(4));
        lblG5.setText(GroupNames.get(5));

        loadGroups(0);

        cmbUnits.setModel(new DefaultComboBoxModel(CUnit.findAllUnitGroups()));
        cmbProp.setModel(new DefaultComboBoxModel(CPropertise.getAllPropertise()));
        loadUnitGroupData();

        MPropertise selectedItem = (MPropertise) cmbProp.getSelectedItem();
        if (selectedItem != null) {
            lblFormat.setText("[" + selectedItem.getFormat() + "]");

            MaskFormatter mfWarranty = new MaskFormatter("##-##-##");

            switch (selectedItem.getDataType()) {
                case 6:

                    txtFproVal.setFormatterFactory(new DefaultFormatterFactory(mfWarranty));
            }
        }
lblProImg.setIcon(null);
        cmb_Suppliers.setModel(new DefaultComboBoxModel(CSuppliers.getAllSuppliers()));

    }

    private void SetProductName() {
        ArrayList<MGroupCommon> GList = new ArrayList<>();
        GList.add((MGroupCommon) cmbG1.getSelectedItem());
        GList.add((MGroupCommon) cmbG2.getSelectedItem());
        GList.add((MGroupCommon) cmbG3.getSelectedItem());
        GList.add((MGroupCommon) cmbG4.getSelectedItem());
        GList.add((MGroupCommon) cmbG5.getSelectedItem());

        String productName = cf.getProductName(GList);
        txtProName.setText(productName);
    }

    private void addProperty() {
        if (cmbProp.getSelectedItem() != null && !txtFproVal.getText().equals("") && txtFproVal.isEditValid()) {

            MPropertise p = (MPropertise) cmbProp.getSelectedItem();
            removePropIfExists(p);
            DefaultTableModel tmodel = (DefaultTableModel) tblProperty.getModel();
            Vector v = new Vector();
            v.add(p);
            v.add(p.getFormat());
            v.add(txtFproVal.getText());
            tmodel.addRow(v);

        } else {
            JOptionPane.showMessageDialog(rootPane, "Please enter valid values!", GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
        }

    }

    private void RemoveProperty() {

        try {
            int selectedRow = tblProperty.getSelectedRow();
            if (selectedRow > -1) {
                MPropertise p = (MPropertise) tblProperty.getValueAt(selectedRow, 0);

                removePropIfExists(p);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);

        }

    }

    private void removePropIfExists(MPropertise NewProp) {
        DefaultTableModel tbl = (DefaultTableModel) tblProperty.getModel();
        for (int i = 0; i < tbl.getRowCount(); i++) {
            MPropertise p = (MPropertise) tbl.getValueAt(i, 0);
            if (p != null && p.getPropId() == NewProp.getPropId()) {
                tbl.removeRow(i);
                break;
            }
        }
    }

    public boolean validateProduct() {
        boolean state = true;

        if (txtProName.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Item Name cannot be empty!", GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            state = false;

        } else if (txtProShortName.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Item Short Name cannot be empty!", GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            state = false;
        } else if (txtprocost.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Cost price cannot be empty!", GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            state = false;
        } else if (txtprosellprice.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Sell price cannot be empty!", GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            state = false;
        } else if (getActiveUnitsCount() <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Select Unit group", GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            state = false;
        }

        return state;
    }

    private int getActiveUnitsCount() {
        int count = 0;

        DefaultTableModel tbl = (DefaultTableModel) tblUnits.getModel();
        for (int i = 0; i < tbl.getRowCount(); i++) {

            count++;

        }
        return count;

    }

    private void Clear() {
        txtProCode.setText("");
        txtProName.setText("");
        txtProShortName.setText("");
        txtRef1.setText("");
        txtRef2.setText("");
        txtprocost.setText("");
        txtprosellprice.setText("");
        txtpromarkup.setText("");
        txtFproVal.setText("");

        Chk_ProActive.setSelected(true);

        DefaultTableModel tmodel = (DefaultTableModel) tblProperty.getModel();
        tmodel.setRowCount(0);
        DefaultTableModel tmodel2 = (DefaultTableModel) tblUnits.getModel();
        tmodel2.setRowCount(0);

        DefaultTableModel dtm2 = (DefaultTableModel) tblBatches.getModel();
        dtm2.setRowCount(0);

        Vector v = new Vector();
        List_Sup.setListData(v);

        txtProCode.grabFocus();
        JComponent disablecom[] = {but_Update};

        JComponent enablecom[] = {but_Search, List_Sup, butSupAdd, tblProperty, tblUnits, layoutUnits, but_ProImgChoose, txtProName, but_Save, layout_Basic, layoutGroups, layoutPrice, layoutRef, layoutUnits, layoutPropertise};

        setDisableEnableComponents(enablecom, disablecom);
        ParentLayout.setSelectedIndex(0);
        txtProCode.grabFocus();

    }

    private void changeSellPrice() {
        if (!txtpromarkup.getText().equals("") && !txtprocost.getText().equals("")) {
            double markup = Double.parseDouble(txtpromarkup.getText());
            double costp = Double.parseDouble(txtprocost.getText());
            double sellp = costp + ((costp * markup) / 100);
            txtprosellprice.setText("" + sellp);
        }
    }

    private void loadProduct() {
        if (!txtProCode.getText().equals("")) {
            try {
                MProducts product = CProducts.getProduct(txtProCode.getText());
                if (product != null) {
                    JComponent disablecom[] = {but_Search, List_Sup, butSupAdd, but_ProImgChoose, txtProCode, tblProperty, tblUnits, txtProName, but_Save, layout_Basic, layoutGroups, layoutPrice, layoutRef, layoutUnits, layoutPropertise};
                    JComponent enablecom[] = {but_Refresh, but_Update};
                    setDisableEnableComponents(enablecom, disablecom);

                    txtProName.setText(product.getName());
                    txtProShortName.setText(product.getPrintdes());
                    Chk_ProActive.setSelected((product.getActive() == 1 ? true : false));
                    txtprocost.setText(product.getCprice().toString());
                    txtpromarkup.setText(product.getMarkup().toString());
                    txtprosellprice.setText(product.getSprice().toString());
                    txtRef1.setText(product.getRef1());
                    txtRef2.setText(product.getRef2());
                    cmbG1.setSelectedItem(CGroup.IsExists("m_group1", product.getMGroup1()));
                    cmbG2.setSelectedItem(CGroup.IsExists("m_group2", product.getMGroup2()));
                    cmbG3.setSelectedItem(CGroup.IsExists("m_group3", product.getMGroup3()));
                    cmbG4.setSelectedItem(CGroup.IsExists("m_group4", product.getMGroup4()));
                    cmbG5.setSelectedItem(CGroup.IsExists("m_group5", product.getMGroup5()));

                    Vector<MProductPropertise> productPropertise = CProducts.getProductPropertise(product.getId());
                    DefaultTableModel dtm1 = (DefaultTableModel) tblProperty.getModel();
                    dtm1.setRowCount(0);
                    for (MProductPropertise mProductPropertise : productPropertise) {

                        Vector v = new Vector();
                        MPropertise property = CPropertise.getProperty(mProductPropertise.getPropertyId());
                        v.add(property);
                        v.add(property.getFormat());
                        v.add(mProductPropertise.getPropertyValue());

                        dtm1.addRow(v);
                    }

                    List_Sup.setListData(CProducts.getAllSuppliers(product.getId()));

                    DefaultTableModel dtm2 = (DefaultTableModel) tblBatches.getModel();
                    dtm2.setRowCount(0);
                    ArrayList<MStocks> ar = CProducts.getAllBatches(product.getId());
                    for (MStocks mStocks : ar) {
                        Vector v = new Vector();
                        v.add(CLoc.getLocation(mStocks.getLocId()));
                        v.add(mStocks.getBatchNo());
                        v.add(mStocks.getCostPrice());
                        v.add(mStocks.getSellPrice());
                        v.add(mStocks.getSIH());
                        v.add(CUnit.getUnit(mStocks.getUnitId()).getSymble());
                        v.add((mStocks.getActive() == 1));
                        dtm2.addRow(v);
                    }

                    setProductIcon(product.getProImg());
                }
            } catch (Exception e) {
                System.err.println(e.getMessage());
            }

        }
    }

    private void loadGroups(int selectedGroup) {

        try {
            ArrayList<String> ar = new ArrayList<>();

            if (selectedGroup < 1) {
                cmbG1.setModel(new DefaultComboBoxModel(CGroup.getAllGroupValues(1, true)));
            }
            MGroupCommon G1 = (MGroupCommon) cmbG1.getSelectedItem();

            if (G1 != null) {
                ar.add(G1.getId());
            }

            if (selectedGroup < 2) {
                cmbG2.setModel(new DefaultComboBoxModel(CGroup.getFilteredGroups(2, ar)));
            }
            MGroupCommon G2 = (MGroupCommon) cmbG2.getSelectedItem();

            if (G2 != null) {
                ar.add(G2.getId());
            }

            if (selectedGroup < 3) {
                cmbG3.setModel(new DefaultComboBoxModel(CGroup.getFilteredGroups(3, ar)));
            }
            MGroupCommon G3 = (MGroupCommon) cmbG3.getSelectedItem();

            if (G3 != null) {
                ar.add(G3.getId());
            }

            if (selectedGroup < 4) {
                cmbG4.setModel(new DefaultComboBoxModel(CGroup.getFilteredGroups(4, ar)));
            }
            MGroupCommon G4 = (MGroupCommon) cmbG4.getSelectedItem();
            if (G4 != null) {
                ar.add(G4.getId());
            }

            if (selectedGroup < 5) {
                cmbG5.setModel(new DefaultComboBoxModel(CGroup.getFilteredGroups(5, ar)));
            }

        } catch (Exception e) {

        }
    }

    private void loadUnitGroupData() {
        MUnitGroup ug = (MUnitGroup) cmbUnits.getSelectedItem();
        DefaultTableModel dtm = (DefaultTableModel) tblUnits.getModel();
        try {
            ArrayList<Vector> ar = CUnit.getAllAssignUnits(ug.getUnitGroupId());
            dtm.setRowCount(0);
            for (Vector v : ar) {
                dtm.addRow(v);
            }
        } catch (Exception ex) {
            // Logger.getLogger(Frm_MItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void changePropTyp() {

        MPropertise selectedItem = (MPropertise) cmbProp.getSelectedItem();
        if (selectedItem != null) {
            try {
                lblFormat.setText("[" + selectedItem.getFormat() + "]");

                MaskFormatter mfWarranty = new MaskFormatter("##-##-##");
                txtFproVal.setText("");
                switch (selectedItem.getDataType()) {
                    case 5:

                        txtFproVal.setFormatterFactory(new DefaultFormatterFactory(mfWarranty));
                    default:
                        txtFproVal.setFormatterFactory(new DefaultFormatterFactory());
                }

            } catch (ParseException ex) {
                Logger.getLogger(Frm_MItems.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void setProductIcon(String path) {
        if (path != null) {
            String imgpath = path;
            File f = new File(imgpath);
            if (f.exists()) {
                BufferedImage img = null;
                try {
                    img = ImageIO.read(f);
                    Image dimg = img.getScaledInstance(230, 270,
                            Image.SCALE_SMOOTH);

                    lblProImg.setIcon(new ImageIcon(dimg));
                } catch (IOException e) {
                    lblProImg.setIcon(null);
                    e.printStackTrace();
                }

            } else {
                lblProImg.setIcon(null); // NOI18N
            }
        } else {
            lblProImg.setIcon(null); // NOI18N 
        }
    }
}
