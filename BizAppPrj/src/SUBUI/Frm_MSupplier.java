/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SUBUI;

import COMMONFUN.CommonFun;
import CONTROLLERS.C_Suppliers;
import DB_ACCESS.DB;
import MAIN.Frm_Main;
import MODELS.MSupplier;
import UI.Frm_Table;
import VALIDATIONS.MyValidator;
import WINMNG.MyWindowBasicControllers;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author HOME
 */
public class Frm_MSupplier extends javax.swing.JInternalFrame implements MyWindowBasicControllers {

    Frm_Table ft = null;
    C_Suppliers m = null;
    Frm_Main mainW = null;
    MyValidator fv = null;
    CommonFun comf = new CommonFun();

    public Frm_MSupplier(Frm_Main mainw, String ScreenName) {
        initComponents();
        this.setTitle(ScreenName);
        this.m = new C_Suppliers();
        this.lblScreenName.setText(ScreenName);
        this.mainW = mainw;
        this.fv = new MyValidator();
        Refresh();
        setShortCutKeys(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_SupCode = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        but_SupUpdate = new javax.swing.JButton();
        but_SupSave = new javax.swing.JButton();
        but_SupSearch = new javax.swing.JButton();
        butSupRefresh = new javax.swing.JButton();
        jpanelq = new javax.swing.JPanel();
        lblScreenName = new javax.swing.JLabel();
        txt_SupDescription = new javax.swing.JTextField();
        Chk_Active = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txt_SupContact = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txt_SupContactPerson = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_SupMobile = new javax.swing.JTextField();
        txt_SupAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtCreditLimit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCreditBalance = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        chk_unlimited_credit = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("caption");
        setName(""); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txt_SupCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SupCodeActionPerformed(evt);
            }
        });
        txt_SupCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SupCodeKeyTyped(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        but_SupUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit.png"))); // NOI18N
        but_SupUpdate.setToolTipText("Save");
        but_SupUpdate.setContentAreaFilled(false);
        but_SupUpdate.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit_disable.png"))); // NOI18N
        but_SupUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_SupUpdateActionPerformed(evt);
            }
        });

        but_SupSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save.png"))); // NOI18N
        but_SupSave.setToolTipText("Save");
        but_SupSave.setContentAreaFilled(false);
        but_SupSave.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save_disable.png"))); // NOI18N
        but_SupSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_SupSaveActionPerformed(evt);
            }
        });

        but_SupSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search.png"))); // NOI18N
        but_SupSearch.setToolTipText("Search(F2)");
        but_SupSearch.setContentAreaFilled(false);
        but_SupSearch.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search_disable.png"))); // NOI18N
        but_SupSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_SupSearchActionPerformed(evt);
            }
        });

        butSupRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh.png"))); // NOI18N
        butSupRefresh.setToolTipText("Refresh");
        butSupRefresh.setContentAreaFilled(false);
        butSupRefresh.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh_disable.png"))); // NOI18N
        butSupRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSupRefreshActionPerformed(evt);
            }
        });

        lblScreenName.setBackground(new java.awt.Color(153, 255, 51));
        lblScreenName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblScreenName.setText("caption");
        jpanelq.add(lblScreenName);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(but_SupSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(but_SupUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(butSupRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(but_SupSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 477, Short.MAX_VALUE)
                .addComponent(jpanelq, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(but_SupSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(but_SupUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(butSupRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(but_SupSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jpanelq, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        Chk_Active.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Chk_ActiveMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Code");

        txt_SupContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SupContactKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SupContactKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Name *");

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setForeground(new java.awt.Color(153, 51, 0));
        jLabel5.setText("System will provide Auto Number for Code. So you need not to enter Code while creating  new Records");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 740, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Contact Person");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Mobile Number");

        txt_SupMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SupMobileKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SupMobileKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Address");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Credit"));

        txtCreditLimit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCreditLimit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCreditLimit.setText("0");
        txtCreditLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCreditLimitKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Credit Limit");

        txtCreditBalance.setEditable(false);
        txtCreditBalance.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCreditBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCreditBalance.setText("0");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Credit Balance");

        chk_unlimited_credit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chk_unlimited_credit.setText("No Credit limit");
        chk_unlimited_credit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chk_unlimited_creditMouseClicked(evt);
            }
        });
        chk_unlimited_credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_unlimited_creditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chk_unlimited_credit)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtCreditBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                        .addComponent(txtCreditLimit)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(chk_unlimited_credit)
                .addGap(18, 18, 18)
                .addComponent(txtCreditLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCreditBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Contact Number");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(Chk_Active, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_SupContactPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_SupContact, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_SupMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_SupAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_SupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_SupDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(90, 90, 90)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SupDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SupContactPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_SupContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SupMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SupAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(Chk_Active)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 957, 659);
    }// </editor-fold>//GEN-END:initComponents

    private void but_SupSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_SupSearchActionPerformed
        SearchMode();
    }//GEN-LAST:event_but_SupSearchActionPerformed

    private void butSupRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSupRefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_butSupRefreshActionPerformed

    private void Chk_ActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chk_ActiveMouseClicked
        if (Chk_Active.isSelected()) {
            Chk_Active.setText("Active");
        } else {
            Chk_Active.setText("In-Active");
        }
    }//GEN-LAST:event_Chk_ActiveMouseClicked

    private void txt_SupCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SupCodeActionPerformed
        loadSupplier();
    }//GEN-LAST:event_txt_SupCodeActionPerformed

    private void but_SupSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_SupSaveActionPerformed
        SaveProcess();
    }//GEN-LAST:event_but_SupSaveActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        txt_SupCode.grabFocus();
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        txt_SupCode.grabFocus();
    }//GEN-LAST:event_formInternalFrameOpened

    private void but_SupUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_SupUpdateActionPerformed
        EditMode();
    }//GEN-LAST:event_but_SupUpdateActionPerformed

    private void txt_SupCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SupCodeKeyTyped
        fv.NumbersOnly(txt_SupCode, evt);
    }//GEN-LAST:event_txt_SupCodeKeyTyped

    private void txt_SupContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SupContactKeyReleased

    }//GEN-LAST:event_txt_SupContactKeyReleased

    private void txt_SupMobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SupMobileKeyReleased

    }//GEN-LAST:event_txt_SupMobileKeyReleased

    private void txt_SupContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SupContactKeyTyped
        fv.NumbersOnly(txt_SupContact, 10, evt);
    }//GEN-LAST:event_txt_SupContactKeyTyped

    private void txt_SupMobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SupMobileKeyTyped
        fv.NumbersOnly(txt_SupMobile, 10, evt);
    }//GEN-LAST:event_txt_SupMobileKeyTyped

    private void txtCreditLimitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditLimitKeyTyped
        fv.validateforFloatingPoints(txtCreditLimit, evt, 2);        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreditLimitKeyTyped

    private void chk_unlimited_creditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chk_unlimited_creditMouseClicked

        txtCreditLimit.setVisible(!chk_unlimited_credit.isSelected());
        
       if(!chk_unlimited_credit.isSelected()){
          txtCreditLimit.setText("0.0");
        }
        
    }//GEN-LAST:event_chk_unlimited_creditMouseClicked

    private void chk_unlimited_creditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_unlimited_creditActionPerformed

    }//GEN-LAST:event_chk_unlimited_creditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Chk_Active;
    private javax.swing.JButton butSupRefresh;
    private javax.swing.JButton but_SupSave;
    private javax.swing.JButton but_SupSearch;
    private javax.swing.JButton but_SupUpdate;
    private javax.swing.JCheckBox chk_unlimited_credit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jpanelq;
    private javax.swing.JLabel lblScreenName;
    private javax.swing.JTextField txtCreditBalance;
    private javax.swing.JTextField txtCreditLimit;
    private javax.swing.JTextField txt_SupAddress;
    private javax.swing.JTextField txt_SupCode;
    private javax.swing.JTextField txt_SupContact;
    private javax.swing.JTextField txt_SupContactPerson;
    private javax.swing.JTextField txt_SupDescription;
    private javax.swing.JTextField txt_SupMobile;
    // End of variables declaration//GEN-END:variables

    @Override
    public void SaveProcess() {

        try {
            if (!txt_SupDescription.getText().equals("")) {

                int state = JOptionPane.showConfirmDialog(rootPane, "Do you want to Save/Update ?", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (state == JOptionPane.YES_OPTION) {
                    if (!txt_SupCode.getText().equals("")) {
                        //update
                        MSupplier Sup = m.getSupplier(txt_SupCode.getText());
                        if (Sup != null) {
                            MSupplier obj = new MSupplier();
                            obj.setId((txt_SupCode.getText()));
                            obj.setName(txt_SupDescription.getText());
                            obj.setMobile(txt_SupMobile.getText());
                            obj.setContact(txt_SupContact.getText());
                            obj.setContactperson(txt_SupContactPerson.getText());
                            obj.setAddress(txt_SupAddress.getText());

                            if (chk_unlimited_credit.isSelected()) {
                                obj.setCreditLimit(-1.0);
                            } else {
                                String creditLimit = txtCreditLimit.getText();
                                obj.setCreditLimit(Double.parseDouble(((creditLimit.equals("") || creditLimit.equals(null)) ? "0" : creditLimit)));
                            }

                            if (Chk_Active.isSelected()) {
                                obj.setActive((byte) 1);
                            } else {
                                obj.setActive((byte) 0);
                            }
                            int UpdateSupplier = m.UpdateSupplier(obj);

                            JOptionPane.showMessageDialog(rootPane, "Supplier Updated Sucessfully!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);
                            Refresh();
                        }
                    } else {
                        MSupplier Sup = m.CheckExists(txt_SupDescription.getText());
                        if (Sup == null) {
                            MSupplier obj = new MSupplier();
                            obj.setId(comf.generateNextNo(5, "S", "M_SUPPLIER", "ID"));
                            obj.setName(txt_SupDescription.getText());
                            obj.setMobile(txt_SupMobile.getText());
                            obj.setContact(txt_SupContact.getText());
                            obj.setContactperson(txt_SupContactPerson.getText());
                            obj.setAddress(txt_SupAddress.getText());

                            if (chk_unlimited_credit.isSelected()) {
                                obj.setCreditLimit(-1.0);
                            } else {
                                String creditLimit = txtCreditLimit.getText();
                                obj.setCreditLimit(Double.parseDouble(((creditLimit.equals("") || creditLimit.equals(null)) ? "0" : creditLimit)));
                            }
                            if (Chk_Active.isSelected()) {
                                obj.setActive((byte) 1);
                            } else {
                                obj.setActive((byte) 0);
                            }
                            int SaveSupplier = m.SaveSupplier(obj);
                            if (SaveSupplier == 1) {
                                JOptionPane.showMessageDialog(rootPane, "Supplier Save Sucessfully!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);
                                Refresh();
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "This Supplier couldn`t Save", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);

                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "This Supplier is Already Available!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);

                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please Fill requied fields!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            }
//
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Couldnt Save/Update due to:" + ex.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }

    }

    @Override
    public void EditMode() {
        JComponent[] DisCom = {but_SupUpdate, but_SupSearch, txt_SupCode};
        JComponent[] EnCom = {but_SupSave, butSupRefresh,chk_unlimited_credit, txt_SupDescription, txt_SupMobile, txt_SupContact, txt_SupContactPerson, txt_SupAddress, Chk_Active, txtCreditLimit};
        setDisableEnableComponents(EnCom, DisCom);
    }

    @Override
    public void Refresh() {
        txt_SupCode.setText("");
        txt_SupDescription.setText("");
        txt_SupAddress.setText("");
        txt_SupContact.setText("");
        txt_SupContactPerson.setText("");
        txt_SupMobile.setText("");
        txt_SupCode.setFocusable(true);
        txt_SupCode.grabFocus();

        txtCreditLimit.setVisible(!chk_unlimited_credit.isSelected());

        txtCreditBalance.setText("0.0");
        txtCreditLimit.setText("0.0");

        Chk_Active.setText("Active");
        Chk_Active.setSelected(true);

        JComponent[] EnCom = {but_SupSearch, but_SupSave,chk_unlimited_credit, txt_SupCode,chk_unlimited_credit, txt_SupDescription, txt_SupMobile, txt_SupContact, txt_SupContactPerson, txt_SupAddress, Chk_Active, txtCreditLimit};
        JComponent[] DisCom = {but_SupUpdate};
        setDisableEnableComponents(EnCom, DisCom);
    }

    public void setShortCutKeys(JInternalFrame f) {

        String exit = "exit";
        InputMap inputMap0 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), exit);
        ActionMap actionMap0 = f.getRootPane().getActionMap();
        actionMap0.put(exit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                exit();
            }

        }
        );

        String Search = "Search";
        InputMap inputMap1 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), Search);
        ActionMap actionMap1 = f.getRootPane().getActionMap();
        actionMap1.put(Search, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SearchMode();
            }

        }
        );

        String Save = "Save";
        InputMap inputMap2 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), Save);
        ActionMap actionMap2 = f.getRootPane().getActionMap();
        actionMap2.put(Save, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SaveProcess();
            }

        }
        );

        String Edit = "Edit";
        InputMap inputMap3 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap3.put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), Edit);
        ActionMap actionMap3 = f.getRootPane().getActionMap();
        actionMap3.put(Edit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                EditMode();
            }

        }
        );

        String Refresh = "Refresh";
        InputMap inputMap4 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap4.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), Refresh);
        ActionMap actionMap4 = f.getRootPane().getActionMap();
        actionMap4.put(Refresh, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Refresh();
            }

        }
        );

    }

    private void exit() {

        try {
            this.setClosed(true);
            mainW.CurrentFrame = "";

        } catch (PropertyVetoException ex) {
            Logger.getLogger(Frm_MSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void setDisableEnableComponents(JComponent[] EnComlist, JComponent[] DisComlist) {
        for (JComponent c : DisComlist) {
            c.setEnabled(false);
        }
        for (JComponent c : EnComlist) {
            c.setEnabled(true);
        }

    }

    @Override
    public void SearchMode() {
        Vector<String> col = new Vector<>();
        col.add("Code");
        col.add("Des");

        String[] SQL_Col = {"ID", "NAME"};
        String SQL = "select ID,NAME from m_supplier ";
        String SQLWhere = "";
        Connection currentCon = null;
        try {
            currentCon = DB.getCurrentCon();
        } catch (Exception ex) {
            Logger.getLogger(Frm_MSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ft == null) {

            ft = new Frm_Table(txt_SupCode, currentCon, col, SQL_Col, SQL, SQLWhere);
            ft.setVisible(true);

        } else {
            ft = null;
            ft = new Frm_Table(txt_SupCode, currentCon, col, SQL_Col, SQL, SQLWhere);
            ft.setFocusable(true);
            ft.setVisible(true);
        }
    }

    private void loadSupplier() {
        if (!txt_SupCode.getText().equals("")) {
            try {
                MSupplier Sup = m.getSupplier(txt_SupCode.getText());

                if (Sup != null) {
                    txt_SupDescription.setText(Sup.getName());
                    txt_SupMobile.setText(Sup.getMobile());
                    txt_SupContact.setText(Sup.getContact());
                    txt_SupContactPerson.setText(Sup.getContactperson());
                    txt_SupAddress.setText(Sup.getAddress());

                    chk_unlimited_credit.setSelected(Sup.getCreditLimit() < 0);
                    txtCreditLimit.setVisible(!chk_unlimited_credit.isSelected());

                    if (Sup.getActive() == 1) {
                        Chk_Active.setSelected(true);
                    } else {
                        Chk_Active.setSelected(false);
                    }
                    JComponent[] EnCom = {but_SupUpdate, butSupRefresh};
                    JComponent[] DisCom = {but_SupSave, txt_SupCode, but_SupSearch, txt_SupDescription, txt_SupMobile, txt_SupContact, txt_SupContactPerson, txt_SupAddress, Chk_Active, txtCreditLimit};
                    setDisableEnableComponents(EnCom, DisCom);

                } else {
                    JOptionPane.showMessageDialog(rootPane, "No Supplier found for given ID :" + txt_SupCode.getText(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
                    Refresh();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Unable to find Supplier by given code:" + txt_SupCode.getText(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
                Refresh();
            }

        }
    }

}
