/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SUBUI;

import COMMONFUN.CommonFun;
import COMMONFUN.UperCaseFilter;
import CONTROLLERS.C_GroupCommon;
import DB_ACCESS.DB;
import MAIN.Frm_Main;
import MODELS.MGroupCommon;
import Test.Frm_Test;
import UI.Frm_Table;
import VALIDATIONS.MyValidator;
import WINMNG.MyWindowBasicControllers;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author HOME
 */
public class Frm_MGroup extends javax.swing.JInternalFrame implements MyWindowBasicControllers {

    Frm_Main mainW = null;
    Frm_Table ft = null;
    String TblName = "";
    MyValidator fv = null;
    String GroupName = "";
    String prf = "";
    C_GroupCommon g = null;
    CommonFun comf = null;

    public Frm_MGroup(Frm_Main mainw, String TblName, String GroupName, String prf) {
        initComponents();
        this.mainW = mainw;
        this.setTitle(GroupName);
        this.TblName = TblName;
        this.fv = new MyValidator();
        this.g = new C_GroupCommon();
        this.GroupName = GroupName;
        this.comf = new CommonFun();
        this.prf = prf;
        txtTitle.setText(GroupName);
        setShortCutKeys(this);
        ((AbstractDocument) txt_GroupCode.getDocument()).setDocumentFilter(new UperCaseFilter());//User Name Filed to Upper case
        this.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        Refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_GroupCode = new javax.swing.JTextField();
        txt_GroupDescription = new javax.swing.JTextField();
        Chk_Active = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtTitle = new javax.swing.JLabel();
        but_GrpSearch = new javax.swing.JButton();
        but_GrpRefresh = new javax.swing.JButton();
        but_GrpUpdate = new javax.swing.JButton();
        but_GrpSave = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Group");
        setName(""); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txt_GroupCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_GroupCodeActionPerformed(evt);
            }
        });
        txt_GroupCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_GroupCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_GroupCodeKeyTyped(evt);
            }
        });

        txt_GroupDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_GroupDescriptionActionPerformed(evt);
            }
        });

        Chk_Active.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Chk_ActiveMouseClicked(evt);
            }
        });

        jLabel3.setText("Code ");

        jLabel4.setText("Description *");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        txtTitle.setBackground(new java.awt.Color(153, 255, 51));
        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTitle.setText("LOCATIONS");
        jPanel3.add(txtTitle);

        but_GrpSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search.png"))); // NOI18N
        but_GrpSearch.setToolTipText("Search(F2)");
        but_GrpSearch.setContentAreaFilled(false);
        but_GrpSearch.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Search_disable.png"))); // NOI18N
        but_GrpSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_GrpSearchActionPerformed(evt);
            }
        });

        but_GrpRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh.png"))); // NOI18N
        but_GrpRefresh.setToolTipText("Refresh");
        but_GrpRefresh.setContentAreaFilled(false);
        but_GrpRefresh.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/refresh_disable.png"))); // NOI18N
        but_GrpRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_GrpRefreshActionPerformed(evt);
            }
        });

        but_GrpUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit.png"))); // NOI18N
        but_GrpUpdate.setToolTipText("Save");
        but_GrpUpdate.setContentAreaFilled(false);
        but_GrpUpdate.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/edit_disable.png"))); // NOI18N
        but_GrpUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_GrpUpdateActionPerformed(evt);
            }
        });

        but_GrpSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save.png"))); // NOI18N
        but_GrpSave.setToolTipText("Save");
        but_GrpSave.setContentAreaFilled(false);
        but_GrpSave.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/SYSIMG/Controlls/Save_disable.png"))); // NOI18N
        but_GrpSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_GrpSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(but_GrpSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(but_GrpUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(but_GrpRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(but_GrpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(but_GrpSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(but_GrpUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(but_GrpRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(but_GrpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setForeground(new java.awt.Color(153, 51, 0));
        jLabel5.setText("System will provide Auto Number for Code. So you need not to enter Code while creating  new Records");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 810, 40));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1093, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txt_GroupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txt_GroupDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(Chk_Active, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_GroupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_GroupDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(Chk_Active)
                .addContainerGap(316, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Chk_ActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chk_ActiveMouseClicked
        if (Chk_Active.isSelected()) {
            Chk_Active.setText("Active");
        } else {
            Chk_Active.setText("In-Active");
        }
    }//GEN-LAST:event_Chk_ActiveMouseClicked

    private void but_GrpSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_GrpSearchActionPerformed
        SearchMode();
    }//GEN-LAST:event_but_GrpSearchActionPerformed

    private void but_GrpRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_GrpRefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_but_GrpRefreshActionPerformed

    private void txt_GroupCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GroupCodeKeyTyped
        fv.LimitForChars(txt_GroupCode, 5, evt);
    }//GEN-LAST:event_txt_GroupCodeKeyTyped

    private void but_GrpSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_GrpSaveActionPerformed
        SaveProcess();

    }//GEN-LAST:event_but_GrpSaveActionPerformed

    private void txt_GroupCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_GroupCodeActionPerformed

        if (txt_GroupCode.getText().equals("")) {
            txt_GroupDescription.grabFocus();
        } else {
            try {
                MGroupCommon group = g.IsExists(TblName, txt_GroupCode.getText().toUpperCase());
                if (group != null) {
                    txt_GroupDescription.setText(group.getName());
                    Chk_Active.setSelected( (group.getActive() == 1 ? true : false));

                    JComponent enablecom[] = {but_GrpRefresh, but_GrpUpdate};
                    JComponent disablecom[] = {but_GrpSearch, txt_GroupCode, txt_GroupDescription, but_GrpSave, Chk_Active};
                    setDisableEnableComponents(enablecom, disablecom);

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Couldn`t find specific group for entered ID :" + txt_GroupCode.getText(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_txt_GroupCodeActionPerformed

    private void but_GrpUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_GrpUpdateActionPerformed
        EditMode();
    }//GEN-LAST:event_but_GrpUpdateActionPerformed

    private void txt_GroupCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GroupCodeKeyPressed

    }//GEN-LAST:event_txt_GroupCodeKeyPressed

    private void txt_GroupDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_GroupDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_GroupDescriptionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Chk_Active;
    private javax.swing.JButton but_GrpRefresh;
    private javax.swing.JButton but_GrpSave;
    private javax.swing.JButton but_GrpSearch;
    private javax.swing.JButton but_GrpUpdate;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel txtTitle;
    private javax.swing.JTextField txt_GroupCode;
    private javax.swing.JTextField txt_GroupDescription;
    // End of variables declaration//GEN-END:variables

    @Override
    public void SaveProcess() {
        if (txt_GroupDescription.getText().equals("")) {
            //fill request fields

            JOptionPane.showMessageDialog(rootPane, "Please fill requested fields!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.WARNING_MESSAGE);
            txt_GroupCode.grabFocus();
        } else {
            try {
                if (!txt_GroupCode.getText().equals("")) {
                    MGroupCommon group = g.IsExists(TblName, txt_GroupCode.getText());
                    if (group != null && group.getId().equals(txt_GroupCode.getText().toUpperCase())) {
                        group.setName(txt_GroupDescription.getText().toUpperCase());
                        group.setActive((byte) (Chk_Active.isSelected() ? 1 : 0));

                        int state = g.updateGroup(TblName, group);
                        if (state == 1) {
                            JOptionPane.showMessageDialog(rootPane, "Update Succesful", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);
                            Refresh();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Unable to Update!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);

                        }

                    } else {
                        JOptionPane.showMessageDialog(rootPane, "No " + GroupName + " ID found :" + txt_GroupCode.getText(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);

                    }
                } else {
                    MGroupCommon group = new MGroupCommon();
                    group.setId(comf.generateNextNo(5, prf, TblName, "ID"));
                    group.setName(txt_GroupDescription.getText().toUpperCase());
                    group.setActive((byte) (Chk_Active.isSelected() ? 1 : 0));

                    int state = g.saveGroup(TblName, group);
                    if (state == 1) {
                        JOptionPane.showMessageDialog(rootPane, "Save Succesful", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);
                        Refresh();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Unable to save!", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);

                    }

                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    @Override
    public void EditMode() {
        JComponent enablecom[] = {but_GrpRefresh, txt_GroupDescription, but_GrpSave, Chk_Active};
        JComponent disablecom[] = {but_GrpSearch, but_GrpUpdate, txt_GroupCode};
        setDisableEnableComponents(enablecom, disablecom);
    }

    @Override
    public void Refresh() {

        JComponent enablecom[] = {but_GrpRefresh, but_GrpSave, but_GrpSearch, txt_GroupCode, txt_GroupDescription, Chk_Active};
        JComponent disablecom[] = {but_GrpUpdate};
        setDisableEnableComponents(enablecom, disablecom);
        txt_GroupCode.setText("");
        txt_GroupDescription.setText("");

        txt_GroupCode.grabFocus();
        Chk_Active.setText("Active");
        Chk_Active.setSelected(true);
    }

    @Override
    public void setShortCutKeys(JInternalFrame f) {
        String exit = "exit";
        InputMap inputMap0 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), exit);
        ActionMap actionMap0 = f.getRootPane().getActionMap();
        actionMap0.put(exit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                exit();
            }

        }
        );

        String Search = "Search";
        InputMap inputMap1 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), Search);
        ActionMap actionMap1 = f.getRootPane().getActionMap();
        actionMap1.put(Search, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SearchMode();
            }

        }
        );

        String Save = "Save";
        InputMap inputMap2 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), Save);
        ActionMap actionMap2 = f.getRootPane().getActionMap();
        actionMap2.put(Save, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                SaveProcess();
            }

        }
        );

        String Edit = "Edit";
        InputMap inputMap3 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap3.put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), Edit);
        ActionMap actionMap3 = f.getRootPane().getActionMap();
        actionMap3.put(Edit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                EditMode();
            }

        }
        );

        String Refresh = "Refresh";
        InputMap inputMap4 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap4.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), Refresh);
        ActionMap actionMap4 = f.getRootPane().getActionMap();
        actionMap4.put(Refresh, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                Refresh();
            }

        }
        );

    }

    private void exit() {

        this.dispose();
    }

    @Override
    public void setDisableEnableComponents(JComponent[] EnComlist, JComponent[] DisComlist) {
        for (JComponent c : DisComlist) {
            c.setEnabled(false);
        }
        for (JComponent c : EnComlist) {
            c.setEnabled(true);
        }

    }

    @Override
    public void SearchMode() {
        Vector<String> col = new Vector<>();
        col.add("Code");
        col.add("Des");

        String[] SQL_Col = {"ID", "NAME"};
        String SQL = "select ID,NAME from " + TblName;

        Connection currentCon = null;
        try {
            currentCon = DB.getCurrentCon();
        } catch (Exception ex) {
            Logger.getLogger(Frm_Test.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ft == null) {

            ft = new Frm_Table(txt_GroupCode, currentCon, col, SQL_Col, SQL, "ISHIDDEN=0 AND ");
            ft.setVisible(true);

        } else {
            ft = null;
            ft = new Frm_Table(txt_GroupCode, currentCon, col, SQL_Col, SQL, "ISHIDDEN=0 AND ");
            ft.setFocusable(true);
            ft.setVisible(true);
        }
    }
}
