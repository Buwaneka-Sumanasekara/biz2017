/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SUBUI;

import COMMONFUN.CommonFun;
import COMMONFUN.TblPayment;
import CONTROLLERS.C_Payments;
import CONTROLLERS.C_TransactionCom;
import MAIN.Frm_Main;
import MODELS.MPaydet;
import MODELS.MPaymst;
import MODELS.TStockline;
import MODELS.TStockmst;
import MODELS.TStockpayments;
import MODELS.UTransactions;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Buwanaka
 */
public class Frm_TCommonTrnPayments extends javax.swing.JDialog {

    private static String TrnNo = "";
    Frm_Main MainFrm = null;
    Frm_TCommonTrn Parent_Trn = null;
    C_Payments C_Payment = null;
    UTransactions TrnSetup = null;
    TStockmst hed = null;
    ArrayList<TStockline> det = null;

    C_TransactionCom c_trn = null;

    CommonFun cf = null;

    private Frm_TCommonTrnPayments(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        C_Payment = new C_Payments();
    }

    private Frm_TCommonTrnPayments(Frm_Main parent, Frm_TCommonTrn parent_trn, boolean modal, UTransactions TrnSetup, TStockmst Hed, ArrayList<TStockline> Det) {
        super(parent, modal);
        initComponents();
        C_Payment = new C_Payments();
        this.c_trn = new C_TransactionCom();
        this.MainFrm = parent;
        this.Parent_Trn = parent_trn;
        this.setTitle(TrnSetup.getTrndesc() + " [PAYMENTS]");
        this.TrnSetup = TrnSetup;
        this.hed = Hed;
        this.det = Det;
        this.cf = new CommonFun();
        createLayout();
        RefreshScreen();
        txt_Amount.grabFocus();
        setShortCutKeys(this);
    }

    @Override
    public void dispose() {
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
      txt_Amount.grabFocus();
    }

    public static String getPaymentScreen(Frm_Main parent, Frm_TCommonTrn parent_trn, boolean modal, UTransactions TrnSetup, TStockmst Hed, ArrayList<TStockline> Det) {
        Frm_TCommonTrnPayments frm = new Frm_TCommonTrnPayments(parent, parent_trn, modal, TrnSetup, Hed, Det);
        frm.setVisible(true);
        frm.setFocusable(true);
         
        return TrnNo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layout_ButPanel = new javax.swing.JPanel();
        but_BillClose = new javax.swing.JButton();
        but_8 = new javax.swing.JButton();
        but_9 = new javax.swing.JButton();
        but_4 = new javax.swing.JButton();
        but_5 = new javax.swing.JButton();
        but_6 = new javax.swing.JButton();
        but_2 = new javax.swing.JButton();
        but_3 = new javax.swing.JButton();
        but_1 = new javax.swing.JButton();
        but_0 = new javax.swing.JButton();
        but_add = new javax.swing.JButton();
        but_7 = new javax.swing.JButton();
        but_ClearAmont = new javax.swing.JButton();
        but_ClearPayments = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbl_Payment = new javax.swing.JLabel();
        lbl_Balance = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_ToPay = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbl_due = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPayment = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        cmb_PayDet = new javax.swing.JComboBox();
        cmb_PayHed = new javax.swing.JComboBox();
        txt_Amount = new javax.swing.JTextField();
        txt_RefNo = new javax.swing.JTextField();
        txt_DateF = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        layout_ButPanel.setBackground(new java.awt.Color(255, 255, 255));
        layout_ButPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        but_BillClose.setBackground(new java.awt.Color(0, 102, 102));
        but_BillClose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        but_BillClose.setText("<html><p>Bill Close</p></html>");
        but_BillClose.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_BillClose.setContentAreaFilled(false);
        but_BillClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_BillCloseActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_BillClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 80));

        but_8.setBackground(new java.awt.Color(0, 102, 102));
        but_8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_8.setText("8");
        but_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_8.setContentAreaFilled(false);
        but_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_8ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 60, 60));

        but_9.setBackground(new java.awt.Color(0, 102, 102));
        but_9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_9.setText("9");
        but_9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_9.setContentAreaFilled(false);
        but_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_9ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 60, 60));

        but_4.setBackground(new java.awt.Color(0, 102, 102));
        but_4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_4.setText("4");
        but_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_4.setContentAreaFilled(false);
        but_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_4ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 60, 60));

        but_5.setBackground(new java.awt.Color(0, 102, 102));
        but_5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_5.setText("5");
        but_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_5.setContentAreaFilled(false);
        but_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_5ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 60, 60));

        but_6.setBackground(new java.awt.Color(0, 102, 102));
        but_6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_6.setText("6");
        but_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_6.setContentAreaFilled(false);
        but_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_6ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 60, 60));

        but_2.setBackground(new java.awt.Color(0, 102, 102));
        but_2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_2.setText("2");
        but_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_2.setContentAreaFilled(false);
        but_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_2ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 60, 60));

        but_3.setBackground(new java.awt.Color(0, 102, 102));
        but_3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_3.setText("3");
        but_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_3.setContentAreaFilled(false);
        but_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_3ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 60, 60));

        but_1.setBackground(new java.awt.Color(0, 102, 102));
        but_1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_1.setText("1");
        but_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_1.setContentAreaFilled(false);
        but_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_1ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 60, 60));

        but_0.setBackground(new java.awt.Color(0, 102, 102));
        but_0.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_0.setText("0");
        but_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_0.setContentAreaFilled(false);
        but_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_0ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 60, 60));

        but_add.setBackground(new java.awt.Color(0, 102, 102));
        but_add.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_add.setText("Add");
        but_add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_add.setContentAreaFilled(false);
        but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 120, 60));

        but_7.setBackground(new java.awt.Color(0, 102, 102));
        but_7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        but_7.setText("7");
        but_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_7.setContentAreaFilled(false);
        but_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_7ActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 60, 60));

        but_ClearAmont.setBackground(new java.awt.Color(0, 102, 102));
        but_ClearAmont.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        but_ClearAmont.setText("<html><center><p>Clear Amount</p></center></html>");
        but_ClearAmont.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_ClearAmont.setContentAreaFilled(false);
        but_ClearAmont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_ClearAmontActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_ClearAmont, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 80, 80));

        but_ClearPayments.setBackground(new java.awt.Color(0, 102, 102));
        but_ClearPayments.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        but_ClearPayments.setText("<html><center><p>Clear Payments</p></center></html>");
        but_ClearPayments.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        but_ClearPayments.setContentAreaFilled(false);
        but_ClearPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_ClearPaymentsActionPerformed(evt);
            }
        });
        layout_ButPanel.add(but_ClearPayments, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 80, 80));

        getContentPane().add(layout_ButPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 290, 270));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("To Pay");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 80, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Due");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 70, 30));

        lbl_Payment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_Payment.setForeground(new java.awt.Color(51, 51, 51));
        lbl_Payment.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_Payment.setText("0.0");
        lbl_Payment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        getContentPane().add(lbl_Payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 210, 30));

        lbl_Balance.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_Balance.setForeground(new java.awt.Color(51, 51, 51));
        lbl_Balance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_Balance.setText("0.0");
        lbl_Balance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        getContentPane().add(lbl_Balance, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 210, 50));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Balance");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 60, 30));

        lbl_ToPay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_ToPay.setForeground(new java.awt.Color(51, 51, 51));
        lbl_ToPay.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_ToPay.setText("0.0");
        lbl_ToPay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        getContentPane().add(lbl_ToPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 210, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Payment");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 80, 30));

        lbl_due.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_due.setForeground(new java.awt.Color(51, 51, 51));
        lbl_due.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_due.setText("0.0");
        lbl_due.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        getContentPane().add(lbl_due, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 210, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        tblPayment.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tblPayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pay Mode", "Sub Mode", "Ref No", "Amount", "EftAmt", "EftDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPayment.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tblPayment);
        if (tblPayment.getColumnModel().getColumnCount() > 0) {
            tblPayment.getColumnModel().getColumn(0).setResizable(false);
            tblPayment.getColumnModel().getColumn(1).setResizable(false);
            tblPayment.getColumnModel().getColumn(2).setResizable(false);
            tblPayment.getColumnModel().getColumn(3).setResizable(false);
            tblPayment.getColumnModel().getColumn(4).setResizable(false);
            tblPayment.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 490, 170));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmb_PayDet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_PayDetActionPerformed(evt);
            }
        });
        jPanel3.add(cmb_PayDet, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 380, 50));

        cmb_PayHed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_PayHedActionPerformed(evt);
            }
        });
        jPanel3.add(cmb_PayHed, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 380, 50));

        txt_Amount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_Amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AmountActionPerformed(evt);
            }
        });
        jPanel3.add(txt_Amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 380, 70));

        txt_RefNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_RefNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_RefNoActionPerformed(evt);
            }
        });
        jPanel3.add(txt_RefNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 230, 40));

        txt_DateF.setDateFormatString("yyyy-MM-dd");
        jPanel3.add(txt_DateF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 140, 40));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 490, 290));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 480));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 550));

        setSize(new java.awt.Dimension(835, 517));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void but_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_4ActionPerformed
        setAmount("4");
    }//GEN-LAST:event_but_4ActionPerformed

    private void but_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_6ActionPerformed
        setAmount("6");        // TODO add your handling code here:
    }//GEN-LAST:event_but_6ActionPerformed

    private void but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addActionPerformed
        try {
            addPayment();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Parent_Trn, ex.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_but_addActionPerformed

    private void but_BillCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_BillCloseActionPerformed
        
        
        try {
            billClose(true);
        } catch (Exception ex) {
                JOptionPane.showMessageDialog(Parent_Trn, ex.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_but_BillCloseActionPerformed

    private void cmb_PayDetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_PayDetActionPerformed
        loadSubPayModes();
    }//GEN-LAST:event_cmb_PayDetActionPerformed

    private void cmb_PayHedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_PayHedActionPerformed

        if (cmb_PayHed.getSelectedIndex() > -1) {
            try {
                MPaymst mst = (MPaymst) cmb_PayHed.getSelectedItem();

                if (mst.getRefreq() == 1) {
                    txt_RefNo.setVisible(true);
                    txt_RefNo.grabFocus();
                } else {
                    txt_RefNo.setVisible(false);

                }

                if (mst.getDatef() == 1) {
                    txt_DateF.setVisible(true);
                    // txt_DateF.grabFocus();
                } else {
                    txt_DateF.setVisible(false);

                }
                loadSubPayModes();

            } catch (Exception ex) {
                //Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmb_PayHedActionPerformed

    private void txt_AmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AmountActionPerformed
        try {
            addPayment();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Parent_Trn, ex.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_AmountActionPerformed

    private void txt_RefNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_RefNoActionPerformed
        txt_Amount.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_RefNoActionPerformed

    private void but_ClearAmontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_ClearAmontActionPerformed
        txt_Amount.setText("");
        txt_Amount.grabFocus();
    }//GEN-LAST:event_but_ClearAmontActionPerformed

    private void but_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_0ActionPerformed
        setAmount("0");
    }//GEN-LAST:event_but_0ActionPerformed

    private void but_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_1ActionPerformed
        setAmount("1");
    }//GEN-LAST:event_but_1ActionPerformed

    private void but_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_2ActionPerformed
        setAmount("2");
    }//GEN-LAST:event_but_2ActionPerformed

    private void but_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_3ActionPerformed
        setAmount("3");
    }//GEN-LAST:event_but_3ActionPerformed

    private void but_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_5ActionPerformed
        setAmount("5");        // TODO add your handling code here:
    }//GEN-LAST:event_but_5ActionPerformed

    private void but_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_7ActionPerformed
        setAmount("7");        // TODO add your handling code here:
    }//GEN-LAST:event_but_7ActionPerformed

    private void but_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_8ActionPerformed
        setAmount("8");        // TODO add your handling code here:
    }//GEN-LAST:event_but_8ActionPerformed

    private void but_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_9ActionPerformed
        setAmount("9");        // TODO add your handling code here:
    }//GEN-LAST:event_but_9ActionPerformed

    private void but_ClearPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_ClearPaymentsActionPerformed
        RefreshScreen();        // TODO add your handling code here:
    }//GEN-LAST:event_but_ClearPaymentsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Frm_TCommonTrnPayments dialog = new Frm_TCommonTrnPayments(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_0;
    private javax.swing.JButton but_1;
    private javax.swing.JButton but_2;
    private javax.swing.JButton but_3;
    private javax.swing.JButton but_4;
    private javax.swing.JButton but_5;
    private javax.swing.JButton but_6;
    private javax.swing.JButton but_7;
    private javax.swing.JButton but_8;
    private javax.swing.JButton but_9;
    private javax.swing.JButton but_BillClose;
    private javax.swing.JButton but_ClearAmont;
    private javax.swing.JButton but_ClearPayments;
    private javax.swing.JButton but_add;
    private javax.swing.JComboBox cmb_PayDet;
    private javax.swing.JComboBox cmb_PayHed;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel layout_ButPanel;
    private javax.swing.JLabel lbl_Balance;
    private javax.swing.JLabel lbl_Payment;
    private javax.swing.JLabel lbl_ToPay;
    private javax.swing.JLabel lbl_due;
    private javax.swing.JTable tblPayment;
    private javax.swing.JTextField txt_Amount;
    private com.toedter.calendar.JDateChooser txt_DateF;
    private javax.swing.JTextField txt_RefNo;
    // End of variables declaration//GEN-END:variables

    public void exit() {
        this.dispose();
    }

    public void setShortCutKeys(JDialog f) {

        String exit = "exit";
        InputMap inputMap0 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), exit);
        ActionMap actionMap0 = f.getRootPane().getActionMap();
        actionMap0.put(exit, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                exit();
            }

        }
        );
        String refresh = "Refresh";
        InputMap inputMap1 = f.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), refresh);
        ActionMap actionMap1 = f.getRootPane().getActionMap();
        actionMap1.put(refresh, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                RefreshScreen();
            }

        }
        );
    }

    private void createLayout() {
        try {
            layout_ButPanel.setOpaque(true);
            //  layout_ButPanel.setBackground(new Color(0, 0, 0, 64));
            tblPayment.setDefaultRenderer(Object.class, new TblPayment());
            tblPayment.setTableHeader(null);
          tblPayment.setBackground(new Color(255, 255, 255));
          jScrollPane1.getViewport().setBackground(new Color(255, 255, 255));
          txt_Amount.grabFocus();

        } catch (Exception ex) {
            Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void RefreshScreen() {
        try {
            lbl_ToPay.setText("" + cf.getValueWithComma(hed.getNetamount()));
            lbl_Payment.setText("0.0");
            lbl_Balance.setText("0.0");
            lbl_due.setText("" + cf.getValueWithComma(hed.getNetamount()));
            txt_DateF.setVisible(false);

            int eftAmtindex = 4;
            //tblPayment.getColumnModel().getColumn(eftAmtindex).setMinWidth(0);
            // tblPayment.getColumnModel().getColumn(eftAmtindex).setMaxWidth(0);
            // tblPayment.getColumnModel().getColumn(eftAmtindex).setWidth(0);

            cmb_PayDet.setVisible(false);
            txt_RefNo.setVisible(false);
            DefaultTableModel dtm = (DefaultTableModel) tblPayment.getModel();
            dtm.setRowCount(0);
            cmb_PayHed.setModel(new DefaultComboBoxModel(C_Payment.getPayMst()));
            clearPaymentBox();
            txt_Amount.grabFocus();
        } catch (Exception ex) {
            //  Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addPayment() throws Exception {
        if (doValidations()) {
            MPaymst mst = (MPaymst) cmb_PayHed.getSelectedItem();
            MPaydet det = cmb_PayDet.getSelectedIndex() > -1 ? (MPaydet) cmb_PayDet.getSelectedItem() : new MPaydet();
            String RefNo = txt_RefNo.isVisible() ? txt_RefNo.getText() : "";
            double Amount = cf.parseValueWithComma(txt_Amount.getText()).doubleValue();

            try {
                double CheckExists = CheckExists(mst, det);
                Amount = CheckExists + Amount;
            } catch (Exception e) {

            }

            double calBalance = getcalculateBalance();

            double eftamt = Amount;

            if (mst.getOverpay() == 1) {
                if (calBalance < Amount) {
                    eftamt = calBalance;
                } else {
                    eftamt = Amount;
                }
            }

            Date eftDatee = (txt_DateF.isVisible() ? txt_DateF.getDate() : new Date());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String eftdate = sdf.format(eftDatee);

            DefaultTableModel dtm = (DefaultTableModel) tblPayment.getModel();
            Vector v = new Vector();
            v.add(mst);
            v.add(det);
            v.add(RefNo);
            v.add(Amount);
            v.add(eftamt);
            v.add(eftdate);
            dtm.addRow(v);
            clearPaymentBox();
            calculateTotal();
        }
    }

    private boolean doValidations() throws Exception {
        boolean state = true;
        MPaymst mst = (MPaymst) cmb_PayHed.getSelectedItem();
        MPaydet det = cmb_PayDet.getSelectedIndex() > -1 ? (MPaydet) cmb_PayDet.getSelectedItem() : new MPaydet();
        if (cmb_PayHed.getSelectedIndex() == (-1)) {

            state = false;
            JOptionPane.showMessageDialog(this, "Please select Pay mode", GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);

        } else if (txt_Amount.getText().equals("")) {
            state = false;
            JOptionPane.showMessageDialog(this, "Amount can`t be blank", GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);

        } else if (txt_RefNo.isVisible() && txt_RefNo.getText().equals("")) {
            state = false;
            JOptionPane.showMessageDialog(this, "Need reference number", GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);

        } else if (mst.getId() != null && mst.getOverpay() == 0 && cf.parseValueWithComma(txt_Amount.getText()).doubleValue() > cf.parseValueWithComma(lbl_due.getText()).doubleValue()) {
            state = false;
            JOptionPane.showMessageDialog(this, "You can`t over pay when using this paymode", GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);

        } else if (txt_DateF.isVisible() && txt_DateF.getDate() == null) {
            state = false;
            JOptionPane.showMessageDialog(this, "Please select Date", GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);

        }

        return state;
    }

    private double CheckExists(MPaymst mst, MPaydet det) throws Exception {
        DefaultTableModel dtm = (DefaultTableModel) tblPayment.getModel();
        double amount = 0;
        boolean state = false;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            MPaymst mstP = (MPaymst) dtm.getValueAt(i, 0);
            MPaydet detP = (MPaydet) dtm.getValueAt(i, 1);

            if (detP.getId() == null || detP.getId().equals("")) {
                if (mstP.equals(mst)) {
                    amount = Double.parseDouble(dtm.getValueAt(i, 3).toString());
                    dtm.removeRow(i);
                    state = true;
                    break;
                }
            } else if (mstP.equals(mst) && detP.equals(det)) {
                amount = Double.parseDouble(dtm.getValueAt(i, 3).toString());
                dtm.removeRow(i);
                state = true;
                break;
            }
        }
        if (state == true) {
            throw new Exception("Avaialble");
        }
        return amount;

    }

    private void clearPaymentBox() {
        try {
            cmb_PayDet.setVisible(false);
            txt_RefNo.setVisible(false);
            txt_DateF.setVisible(false);
            txt_DateF.setDate(new Date());
            cmb_PayHed.setModel(new DefaultComboBoxModel(C_Payment.getPayMst()));
            loadSubPayModes();
            txt_RefNo.setText("");
            txt_Amount.setText("");
            txt_Amount.grabFocus();
        } catch (Exception ex) {
            // Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void calculateTotal() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblPayment.getModel();
            double amount = 0;
            for (int i = 0; i < dtm.getRowCount(); i++) {

                amount += Double.parseDouble(dtm.getValueAt(i, 3).toString());
            }

            double ToPay = cf.parseValueWithComma(lbl_ToPay.getText()).doubleValue();
            double Paid = amount;
            double balance = ToPay - Paid;

            if (balance >= 0) {
                lbl_due.setText("" + cf.getValueWithComma(balance));
                lbl_Balance.setText("0.0");
                billClose(false);
            } else {
                lbl_due.setText("0.0");
                lbl_Balance.setText("" + cf.getValueWithComma((balance * -1)));
                billClose(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Parent_Trn, e.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.ERROR_MESSAGE);
        }

    }

    private double getcalculateBalance() throws ParseException {
        DefaultTableModel dtm = (DefaultTableModel) tblPayment.getModel();
        double amount = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {

            amount += Double.parseDouble(dtm.getValueAt(i, 3).toString());
        }

        double ToPay = cf.parseValueWithComma(lbl_ToPay.getText()).doubleValue();
        double Paid = amount;
        double balance = ToPay - Paid;

        if (balance > 0) {
            return balance;
        } else {
            return 0;
        }

    }

    private void billClose(boolean b) throws Exception {
        double due = cf.parseValueWithComma(lbl_due.getText()).doubleValue();
        if (due == 0) {
            double change = cf.parseValueWithComma(lbl_Balance.getText()).doubleValue();
            String pretxt = ((change > 0) ? "<html><h1>Change: " + lbl_Balance.getText() + "</h1><br/><p>Do you want to close the bill?</p></html> " : "<html><p>Do you want to close the bill?</p></html> ");
            int state = JOptionPane.showConfirmDialog(this, pretxt, GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.YES_NO_OPTION);
            if (state == JOptionPane.YES_OPTION) {
                try {
                    TrnNo = saveData();
                    Parent_Trn.Refresh();
                    JOptionPane.showMessageDialog(rootPane, "Save " + TrnSetup.getTrndesc() + " Sucessfully", GLOBALDATA.GlobalData.MESSAGEBOX, JOptionPane.INFORMATION_MESSAGE);

                    this.dispose();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);

                }

            }
        } else if (b) {
            JOptionPane.showMessageDialog(this, "Please complete due amount :" + due, GLOBALDATA.GlobalData.MESSAGEBOX + "-Payment", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void loadSubPayModes() {
        if (cmb_PayHed.getSelectedIndex() > -1) {
            try {
                MPaymst mst = (MPaymst) cmb_PayHed.getSelectedItem();
                Vector<MPaydet> v = C_Payment.getPayDet(mst.getId());
                cmb_PayDet.setModel(new DefaultComboBoxModel(v));

                if (v.size() > 0) {
                    cmb_PayDet.setVisible(true);
                    MPaydet det = (MPaydet) cmb_PayDet.getSelectedItem();

                    if (det.getRefreq() == 1) {
                        txt_RefNo.setVisible(true);
                        txt_RefNo.grabFocus();
                    } else {
                        txt_RefNo.setVisible(false);
                        txt_Amount.grabFocus();
                    }

                    if (det.getDatef() == 1) {
                        txt_DateF.setVisible(true);
                        // txt_DateF.grabFocus();
                    } else {
                        txt_DateF.setVisible(false);

                    }
                } else {
                    cmb_PayDet.setVisible(false);
                    txt_Amount.grabFocus();
                }

            } catch (Exception ex) {
                //Logger.getLogger(Frm_TCommonTrnPayments.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private String saveData() throws Exception {

        //DefaultTableModel dtm=(DefaultTableModel) tblPayment.getModel();
        ArrayList<TStockpayments> arp = new ArrayList<>();
        for (int i = 0; i < tblPayment.getRowCount(); i++) {
            String refNo = tblPayment.getValueAt(i, 2).toString();
            MPaymst payh = (MPaymst) tblPayment.getValueAt(i, 0);
            MPaydet d = (MPaydet) tblPayment.getValueAt(i, 1);
            String paydetId = (d == null || d.getId() == null || d.getId().equals("")) ? "" : d.getId();
            double FAmount = Double.parseDouble(tblPayment.getValueAt(i, 3).toString());
            double EftAmount = Double.parseDouble(tblPayment.getValueAt(i, 4).toString());
            String date = tblPayment.getValueAt(i, 5).toString();
            int utilized = payh.getId().equals("CHQ") ? 0 : 1;

            TStockpayments m = new TStockpayments();
            m.setId(i);
            m.setTStockmst(hed);
            m.setRefno(refNo);
            m.setFrmamount(FAmount);
            m.setAmount(EftAmount);
            m.setChange(FAmount - EftAmount);
            m.setMPaydetId(paydetId);
            m.setMPayHedId(payh.getId());
            m.setEfectiveDate(date);
            m.setUTransactions(TrnSetup);
            m.setUtilized(utilized);
            arp.add(m);
        }
        hed.setChange(cf.parseValueWithComma(lbl_Balance.getText()).doubleValue());
        return c_trn.saveTransaction(hed, det, arp);

    }

    private void setAmount(String val) {
        txt_Amount.setText(txt_Amount.getText() + val);

    }
}
